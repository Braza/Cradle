{
    "console": [
        {
            "type": "message",
            "value": "Loaded the built-in macros."
        }
    ],
    "result": [
        {
            "Name": "Result",
            "Pid": "1",
            "Tags": "",
            "Tokens": [
                {
                    "text": "Yay! This is the end of the test.",
                    "type": "text"
                }
            ]
        },
        {
            "Name": "Vars_StrictMode",
            "Pid": "2",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "set: $strictTest to \"string value\"",
                    "name": "set",
                    "text": "(set: $strictTest to \"string value\")",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "strictTest",
                            "text": "$strictTest",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "to",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "string value",
                            "text": "\"string value\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "set: $strictTest to 12.5",
                    "name": "set",
                    "text": "(set: $strictTest to 12.5)",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "strictTest",
                            "text": "$strictTest",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "to",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "12.5",
                            "type": "number",
                            "value": 12.5
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                }
            ]
        },
        {
            "Name": "Vars_Type_String",
            "Pid": "3",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $str = \"A\")\n(assert: $str is \"A\", \"equality (left)\")\n(assert: \"A\" is $str, \"equality (right)\")\n(assert: $str is not \"ABC\", \"inequality (left)\")\n(assert: \"ABC\" is not $str, \"inequality (right)\")\n\n(set: $str = it + \"B\")\n(assert: $str is \"AB\", \"join operator (left)\")\n\n(set: $str = \"C\" + $str)\n(assert: $str is \"CAB\", \"join operator (right)\")\n\n(assert: $str contains \"CA\", \"contains literal\")\n(assert: $str's 1st is \"C\", \"position fwd\")\n(assert: $str's 2ndlast is \"A\", \"position bkwd\")\n(assert: $str's (3) is \"B\", \"numeric index fwd\")\n(assert: $str's (-1) is \"A\", \"numeric index bkwd\")\n(assert: $str's (a:1,3) is \"CB\", \"index array (substring)\")\n(assert: $str's length is 3, \"length\")\n\n(assert: \"Fear\" contains (\"e\" + \"ar\"), \"contains expression\")\n(assert: \"ugh\" is in \"Through\", \"contained by\")\n\n(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")\n(assert: \"YO\"'s last is \"O\", \"position bkwd\")\n(assert: \"PS\"'s (2) is \"S\", \"numeric index\")\n\n(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")\n(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")\n(assert: (2) of (\"PS\") is \"S\", \"numeric index\")\n\n<!-- macros -->\n(assert: (substring:\"cheese\", 2, 4) is \"hee\", \"macro substring\")\n(assert: (text:4*80) is \"320\", \"text macro\")\n\n(pass:)\n",
                    "text": "{\n(set: $str = \"A\")\n(assert: $str is \"A\", \"equality (left)\")\n(assert: \"A\" is $str, \"equality (right)\")\n(assert: $str is not \"ABC\", \"inequality (left)\")\n(assert: \"ABC\" is not $str, \"inequality (right)\")\n\n(set: $str = it + \"B\")\n(assert: $str is \"AB\", \"join operator (left)\")\n\n(set: $str = \"C\" + $str)\n(assert: $str is \"CAB\", \"join operator (right)\")\n\n(assert: $str contains \"CA\", \"contains literal\")\n(assert: $str's 1st is \"C\", \"position fwd\")\n(assert: $str's 2ndlast is \"A\", \"position bkwd\")\n(assert: $str's (3) is \"B\", \"numeric index fwd\")\n(assert: $str's (-1) is \"A\", \"numeric index bkwd\")\n(assert: $str's (a:1,3) is \"CB\", \"index array (substring)\")\n(assert: $str's length is 3, \"length\")\n\n(assert: \"Fear\" contains (\"e\" + \"ar\"), \"contains expression\")\n(assert: \"ugh\" is in \"Through\", \"contained by\")\n\n(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")\n(assert: \"YO\"'s last is \"O\", \"position bkwd\")\n(assert: \"PS\"'s (2) is \"S\", \"numeric index\")\n\n(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")\n(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")\n(assert: (2) of (\"PS\") is \"S\", \"numeric index\")\n\n\n(assert: (substring:\"cheese\", 2, 4) is \"hee\", \"macro substring\")\n(assert: (text:4*80) is \"320\", \"text macro\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = \"A\"",
                            "name": "set",
                            "text": "(set: $str = \"A\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"A\", \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"A\", \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"A\" is $str, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: \"A\" is $str, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is not \"ABC\", \"inequality (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is not \"ABC\", \"inequality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ABC",
                                    "text": "\"ABC\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (left)",
                                    "text": "\"inequality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"ABC\" is not $str, \"inequality (right)\"",
                            "name": "assert",
                            "text": "(assert: \"ABC\" is not $str, \"inequality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ABC",
                                    "text": "\"ABC\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (right)",
                                    "text": "\"inequality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = it + \"B\"",
                            "name": "set",
                            "text": "(set: $str = it + \"B\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "it",
                                    "type": "identifier"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "B",
                                    "text": "\"B\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"AB\", \"join operator (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"AB\", \"join operator (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "AB",
                                    "text": "\"AB\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join operator (left)",
                                    "text": "\"join operator (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = \"C\" + $str",
                            "name": "set",
                            "text": "(set: $str = \"C\" + $str)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "C",
                                    "text": "\"C\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"CAB\", \"join operator (right)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"CAB\", \"join operator (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "CAB",
                                    "text": "\"CAB\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join operator (right)",
                                    "text": "\"join operator (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str contains \"CA\", \"contains literal\"",
                            "name": "assert",
                            "text": "(assert: $str contains \"CA\", \"contains literal\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "CA",
                                    "text": "\"CA\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains literal",
                                    "text": "\"contains literal\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's 1st is \"C\", \"position fwd\"",
                            "name": "assert",
                            "text": "(assert: $str's 1st is \"C\", \"position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "C",
                                    "text": "\"C\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position fwd",
                                    "text": "\"position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's 2ndlast is \"A\", \"position bkwd\"",
                            "name": "assert",
                            "text": "(assert: $str's 2ndlast is \"A\", \"position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "2ndlast",
                                    "text": "'s 2ndlast",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position bkwd",
                                    "text": "\"position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's (3) is \"B\", \"numeric index fwd\"",
                            "name": "assert",
                            "text": "(assert: $str's (3) is \"B\", \"numeric index fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "3",
                                    "text": "(3)",
                                    "tokens": [
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "B",
                                    "text": "\"B\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index fwd",
                                    "text": "\"numeric index fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's (-1) is \"A\", \"numeric index bkwd\"",
                            "name": "assert",
                            "text": "(assert: $str's (-1) is \"A\", \"numeric index bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "-1",
                                    "text": "(-1)",
                                    "tokens": [
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index bkwd",
                                    "text": "\"numeric index bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's (a:1,3) is \"CB\", \"index array (substring)\"",
                            "name": "assert",
                            "text": "(assert: $str's (a:1,3) is \"CB\", \"index array (substring)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "a:1,3",
                                    "name": "a",
                                    "text": "(a:1,3)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "CB",
                                    "text": "\"CB\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "index array (substring)",
                                    "text": "\"index array (substring)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's length is 3, \"length\"",
                            "name": "assert",
                            "text": "(assert: $str's length is 3, \"length\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "length",
                                    "text": "\"length\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"Fear\" contains (\"e\" + \"ar\"), \"contains expression\"",
                            "name": "assert",
                            "text": "(assert: \"Fear\" contains (\"e\" + \"ar\"), \"contains expression\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Fear",
                                    "text": "\"Fear\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"e\" + \"ar\"",
                                    "text": "(\"e\" + \"ar\")",
                                    "tokens": [
                                        {
                                            "innerText": "e",
                                            "text": "\"e\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "ar",
                                            "text": "\"ar\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains expression",
                                    "text": "\"contains expression\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"ugh\" is in \"Through\", \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"ugh\" is in \"Through\", \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ugh",
                                    "text": "\"ugh\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Through",
                                    "text": "\"Through\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"YO\"'s 1st is \"Y\", \"position fwd\"",
                            "name": "assert",
                            "text": "(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "YO",
                                    "text": "\"YO\"",
                                    "type": "string"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Y",
                                    "text": "\"Y\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position fwd",
                                    "text": "\"position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"YO\"'s last is \"O\", \"position bkwd\"",
                            "name": "assert",
                            "text": "(assert: \"YO\"'s last is \"O\", \"position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "YO",
                                    "text": "\"YO\"",
                                    "type": "string"
                                },
                                {
                                    "name": "last",
                                    "text": "'s last",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "O",
                                    "text": "\"O\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position bkwd",
                                    "text": "\"position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"PS\"'s (2) is \"S\", \"numeric index\"",
                            "name": "assert",
                            "text": "(assert: \"PS\"'s (2) is \"S\", \"numeric index\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "PS",
                                    "text": "\"PS\"",
                                    "type": "string"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "2",
                                    "text": "(2)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "S",
                                    "text": "\"S\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index",
                                    "text": "\"numeric index\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\"",
                            "name": "assert",
                            "text": "(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "1st",
                                    "text": "1st of",
                                    "type": "belongingProperty"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"YO\"",
                                    "text": "(\"YO\")",
                                    "tokens": [
                                        {
                                            "innerText": "YO",
                                            "text": "\"YO\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Y",
                                    "text": "\"Y\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "reverse position fwd",
                                    "text": "\"reverse position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: last of (\"YO\") is \"O\", \"reverse position bkwd\"",
                            "name": "assert",
                            "text": "(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "last",
                                    "text": "last of",
                                    "type": "belongingProperty"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"YO\"",
                                    "text": "(\"YO\")",
                                    "tokens": [
                                        {
                                            "innerText": "YO",
                                            "text": "\"YO\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "O",
                                    "text": "\"O\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "reverse position bkwd",
                                    "text": "\"reverse position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (2) of (\"PS\") is \"S\", \"numeric index\"",
                            "name": "assert",
                            "text": "(assert: (2) of (\"PS\") is \"S\", \"numeric index\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "2",
                                    "text": "(2)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "of",
                                    "type": "belongingOperator"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"PS\"",
                                    "text": "(\"PS\")",
                                    "tokens": [
                                        {
                                            "innerText": "PS",
                                            "text": "\"PS\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "S",
                                    "text": "\"S\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index",
                                    "text": "\"numeric index\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": " macros ",
                            "text": "",
                            "tokens": [
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "macros ",
                                    "type": "text"
                                }
                            ],
                            "type": "comment"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (substring:\"cheese\", 2, 4) is \"hee\", \"macro substring\"",
                            "name": "assert",
                            "text": "(assert: (substring:\"cheese\", 2, 4) is \"hee\", \"macro substring\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "substring:\"cheese\", 2, 4",
                                    "name": "substring",
                                    "text": "(substring:\"cheese\", 2, 4)",
                                    "tokens": [
                                        {
                                            "text": "substring:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "cheese",
                                            "text": "\"cheese\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "hee",
                                    "text": "\"hee\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro substring",
                                    "text": "\"macro substring\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (text:4*80) is \"320\", \"text macro\"",
                            "name": "assert",
                            "text": "(assert: (text:4*80) is \"320\", \"text macro\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "text:4*80",
                                    "name": "text",
                                    "text": "(text:4*80)",
                                    "tokens": [
                                        {
                                            "text": "text:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": "80",
                                            "type": "number",
                                            "value": 80
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "320",
                                    "text": "\"320\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "text macro",
                                    "text": "\"text macro\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Bool",
            "Pid": "4",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n  (set: $b to true)\n  (assert: $b, \"evaluate\")\n  (assert: $b is true, \"equality (left)\")\n  (assert: true is $b, \"equality (right)\")\n  (assert: $b is not false, \"inequality (left)\")\n  (assert: false is not $b, \"inequality (right)\")\n  (assert: $b and true, \"and operator\")\n  (assert: false or $b, \"or operator\")\n  (assert: not ($b is false), \"not operator\")\n\n  (set: $b2 to $b and true or false)\n  (assert: $b2, \"assignment\")\n  (assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")\n\n  (pass:)\n",
                    "text": "{\n  (set: $b to true)\n  (assert: $b, \"evaluate\")\n  (assert: $b is true, \"equality (left)\")\n  (assert: true is $b, \"equality (right)\")\n  (assert: $b is not false, \"inequality (left)\")\n  (assert: false is not $b, \"inequality (right)\")\n  (assert: $b and true, \"and operator\")\n  (assert: false or $b, \"or operator\")\n  (assert: not ($b is false), \"not operator\")\n\n  (set: $b2 to $b and true or false)\n  (assert: $b2, \"assignment\")\n  (assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")\n\n  (pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $b to true",
                            "name": "set",
                            "text": "(set: $b to true)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b, \"evaluate\"",
                            "name": "assert",
                            "text": "(assert: $b, \"evaluate\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "evaluate",
                                    "text": "\"evaluate\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is true, \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $b is true, \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: true is $b, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: true is $b, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is not false, \"inequality (left)\"",
                            "name": "assert",
                            "text": "(assert: $b is not false, \"inequality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (left)",
                                    "text": "\"inequality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: false is not $b, \"inequality (right)\"",
                            "name": "assert",
                            "text": "(assert: false is not $b, \"inequality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (right)",
                                    "text": "\"inequality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b and true, \"and operator\"",
                            "name": "assert",
                            "text": "(assert: $b and true, \"and operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "and operator",
                                    "text": "\"and operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: false or $b, \"or operator\"",
                            "name": "assert",
                            "text": "(assert: false or $b, \"or operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "or",
                                    "type": "or"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "or operator",
                                    "text": "\"or operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: not ($b is false), \"not operator\"",
                            "name": "assert",
                            "text": "(assert: not ($b is false), \"not operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "not",
                                    "type": "not"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "$b is false",
                                    "text": "($b is false)",
                                    "tokens": [
                                        {
                                            "name": "b",
                                            "text": "$b",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "is",
                                            "type": "is"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "false",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "not operator",
                                    "text": "\"not operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $b2 to $b and true or false",
                            "name": "set",
                            "text": "(set: $b2 to $b and true or false)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b2",
                                    "text": "$b2",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "or",
                                    "type": "or"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b2, \"assignment\"",
                            "name": "assert",
                            "text": "(assert: $b2, \"assignment\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b2",
                                    "text": "$b2",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "assignment",
                                    "text": "\"assignment\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\"",
                            "name": "assert",
                            "text": "(assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "4 > 2",
                                    "text": "(4 > 2)",
                                    "tokens": [
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": ">",
                                            "type": "inequality"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "(1 is 0) or $b2",
                                    "text": "((1 is 0) or $b2)",
                                    "tokens": [
                                        {
                                            "innerText": "1 is 0",
                                            "text": "(1 is 0)",
                                            "tokens": [
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": " ",
                                                    "type": "whitespace"
                                                },
                                                {
                                                    "text": "is",
                                                    "type": "is"
                                                },
                                                {
                                                    "text": " ",
                                                    "type": "whitespace"
                                                },
                                                {
                                                    "text": "0",
                                                    "type": "number"
                                                }
                                            ],
                                            "type": "grouping"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "or",
                                            "type": "or"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "b2",
                                            "text": "$b2",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "67*1+1",
                                    "text": "(67*1+1)",
                                    "tokens": [
                                        {
                                            "text": "67",
                                            "type": "number",
                                            "value": 67
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "68",
                                    "type": "number",
                                    "value": 68
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "nesting",
                                    "text": "\"nesting\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Number",
            "Pid": "5",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n  (set: $int to 2)\n\n  (assert: 2 + $int is 4, \"int addition (right)\")\n  (assert: $int + 2 is 4, \"int addition (left)\")\n  (assert: 3 - $int is 1, \"int substraction (right)\")\n  (assert: $int - 3 is -1, \"int substraction (left)\")\n  (assert: 5 * $int is 10, \"int multiplication (right)\")\n  (assert: $int * 5 is 10, \"int multiplication (left)\")\n  (assert: 2 / $int is 1, \"int division (right)\")\n  (assert: $int / 2 is 1, \"int division (left)\")\n  (assert: 5 % $int is 1, \"int modulo (right)\")\n  (assert: $int % 2 is 0, \"int modulo (left)\")\n  (assert: 3 > $int, \"int greater than (right)\")\n  (assert: $int > 1, \"int greater than (left)\")\n  (assert: 2 >= $int, \"int greater than or equal (right)\")\n  (assert: $int >= 2, \"int greater than or equal (left)\")\n  (assert: 1 < $int, \"int less than (right)\")\n  (assert: $int < 3, \"int less than (left)\")\n  (assert: 1 <= $int, \"int less than or equal (right)\")\n  (assert: $int <= 3, \"int less than or equal (left)\")\n  \n  (set: $dec to 2.1)\n\n  (assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")\n  (assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")\n  (assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")\n  (assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")\n  (assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")\n  (assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")\n  (assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\")\n  (assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")\n  (assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")\n  (assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")\n  (assert: 3 > $dec, \"decimal greater than (right)\")\n  (assert: $dec > 2, \"decimal greater than (left)\")\n  (assert: 3 >= $dec, \"decimal greater than or equal (right)\")\n  (assert: $dec >= 2, \"decimal greater than or equal (left)\")\n  (assert: 2 < $dec, \"decimal less than (right)\")\n  (assert: $dec < 3, \"decimal less than (left)\")\n  (assert: 2 <= $dec, \"decimal less than or equal (right)\")\n  (assert: $dec <= 3, \"decimal less than or equal (left)\")\n  \n  <!-- macros --> \n  (assert: (ceil:3.1) is 4, \"macro: ceil\")\n  (assert: (floor:-3.1) is -4, \"macro: floor\")\n  (assert: (num:\"2\"+\"5\") is 25, \"macro: num\")\n  (assert: (number:\"2\"+\"5\") is 25, \"macro: number\")\n  (assert: (random:1,6) is in (range:1,6), \"macro: random\")\n  \n  (pass:)\n",
                    "text": "{\n  (set: $int to 2)\n\n  (assert: 2 + $int is 4, \"int addition (right)\")\n  (assert: $int + 2 is 4, \"int addition (left)\")\n  (assert: 3 - $int is 1, \"int substraction (right)\")\n  (assert: $int - 3 is -1, \"int substraction (left)\")\n  (assert: 5 * $int is 10, \"int multiplication (right)\")\n  (assert: $int * 5 is 10, \"int multiplication (left)\")\n  (assert: 2 / $int is 1, \"int division (right)\")\n  (assert: $int / 2 is 1, \"int division (left)\")\n  (assert: 5 % $int is 1, \"int modulo (right)\")\n  (assert: $int % 2 is 0, \"int modulo (left)\")\n  (assert: 3 > $int, \"int greater than (right)\")\n  (assert: $int > 1, \"int greater than (left)\")\n  (assert: 2 >= $int, \"int greater than or equal (right)\")\n  (assert: $int >= 2, \"int greater than or equal (left)\")\n  (assert: 1 < $int, \"int less than (right)\")\n  (assert: $int < 3, \"int less than (left)\")\n  (assert: 1 <= $int, \"int less than or equal (right)\")\n  (assert: $int <= 3, \"int less than or equal (left)\")\n  \n  (set: $dec to 2.1)\n\n  (assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")\n  (assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")\n  (assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")\n  (assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")\n  (assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")\n  (assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")\n  (assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\")\n  (assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")\n  (assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")\n  (assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")\n  (assert: 3 > $dec, \"decimal greater than (right)\")\n  (assert: $dec > 2, \"decimal greater than (left)\")\n  (assert: 3 >= $dec, \"decimal greater than or equal (right)\")\n  (assert: $dec >= 2, \"decimal greater than or equal (left)\")\n  (assert: 2 < $dec, \"decimal less than (right)\")\n  (assert: $dec < 3, \"decimal less than (left)\")\n  (assert: 2 <= $dec, \"decimal less than or equal (right)\")\n  (assert: $dec <= 3, \"decimal less than or equal (left)\")\n  \n   \n  (assert: (ceil:3.1) is 4, \"macro: ceil\")\n  (assert: (floor:-3.1) is -4, \"macro: floor\")\n  (assert: (num:\"2\"+\"5\") is 25, \"macro: num\")\n  (assert: (number:\"2\"+\"5\") is 25, \"macro: number\")\n  (assert: (random:1,6) is in (range:1,6), \"macro: random\")\n  \n  (pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $int to 2",
                            "name": "set",
                            "text": "(set: $int to 2)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 + $int is 4, \"int addition (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 + $int is 4, \"int addition (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int addition (right)",
                                    "text": "\"int addition (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int + 2 is 4, \"int addition (left)\"",
                            "name": "assert",
                            "text": "(assert: $int + 2 is 4, \"int addition (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int addition (left)",
                                    "text": "\"int addition (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 - $int is 1, \"int substraction (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 - $int is 1, \"int substraction (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int substraction (right)",
                                    "text": "\"int substraction (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int - 3 is -1, \"int substraction (left)\"",
                            "name": "assert",
                            "text": "(assert: $int - 3 is -1, \"int substraction (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int substraction (left)",
                                    "text": "\"int substraction (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 5 * $int is 10, \"int multiplication (right)\"",
                            "name": "assert",
                            "text": "(assert: 5 * $int is 10, \"int multiplication (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "*",
                                    "type": "multiplication"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10",
                                    "type": "number",
                                    "value": 10
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int multiplication (right)",
                                    "text": "\"int multiplication (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int * 5 is 10, \"int multiplication (left)\"",
                            "name": "assert",
                            "text": "(assert: $int * 5 is 10, \"int multiplication (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "*",
                                    "type": "multiplication"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10",
                                    "type": "number",
                                    "value": 10
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int multiplication (left)",
                                    "text": "\"int multiplication (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 / $int is 1, \"int division (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 / $int is 1, \"int division (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "/",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int division (right)",
                                    "text": "\"int division (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int / 2 is 1, \"int division (left)\"",
                            "name": "assert",
                            "text": "(assert: $int / 2 is 1, \"int division (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "/",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int division (left)",
                                    "text": "\"int division (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 5 % $int is 1, \"int modulo (right)\"",
                            "name": "assert",
                            "text": "(assert: 5 % $int is 1, \"int modulo (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "%",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int modulo (right)",
                                    "text": "\"int modulo (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int % 2 is 0, \"int modulo (left)\"",
                            "name": "assert",
                            "text": "(assert: $int % 2 is 0, \"int modulo (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "%",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0",
                                    "type": "number"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int modulo (left)",
                                    "text": "\"int modulo (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 > $int, \"int greater than (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 > $int, \"int greater than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than (right)",
                                    "text": "\"int greater than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int > 1, \"int greater than (left)\"",
                            "name": "assert",
                            "text": "(assert: $int > 1, \"int greater than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than (left)",
                                    "text": "\"int greater than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 >= $int, \"int greater than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 >= $int, \"int greater than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than or equal (right)",
                                    "text": "\"int greater than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int >= 2, \"int greater than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $int >= 2, \"int greater than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than or equal (left)",
                                    "text": "\"int greater than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 1 < $int, \"int less than (right)\"",
                            "name": "assert",
                            "text": "(assert: 1 < $int, \"int less than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than (right)",
                                    "text": "\"int less than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int < 3, \"int less than (left)\"",
                            "name": "assert",
                            "text": "(assert: $int < 3, \"int less than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than (left)",
                                    "text": "\"int less than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 1 <= $int, \"int less than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 1 <= $int, \"int less than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than or equal (right)",
                                    "text": "\"int less than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int <= 3, \"int less than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $int <= 3, \"int less than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than or equal (left)",
                                    "text": "\"int less than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $dec to 2.1",
                            "name": "set",
                            "text": "(set: $dec to 2.1)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2.1",
                                    "type": "number",
                                    "value": 2.1
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:2 + $dec, 1",
                                    "name": "round",
                                    "text": "(round:2 + $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4.1",
                                    "type": "number",
                                    "value": 4.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal addition (right)",
                                    "text": "\"decimal addition (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec + 2, 1",
                                    "name": "round",
                                    "text": "(round:$dec + 2, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4.1",
                                    "type": "number",
                                    "value": 4.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal addition (left)",
                                    "text": "\"decimal addition (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:3 - $dec, 1",
                                    "name": "round",
                                    "text": "(round:3 - $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.9",
                                    "type": "number",
                                    "value": 0.9
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal substraction (right)",
                                    "text": "\"decimal substraction (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec - 3, 1",
                                    "name": "round",
                                    "text": "(round:$dec - 3, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": "0.9",
                                    "type": "number",
                                    "value": 0.9
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal substraction (left)",
                                    "text": "\"decimal substraction (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:5 * $dec, 1",
                                    "name": "round",
                                    "text": "(round:5 * $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10.5",
                                    "type": "number",
                                    "value": 10.5
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal multiplication (right)",
                                    "text": "\"decimal multiplication (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec * 5, 1",
                                    "name": "round",
                                    "text": "(round:$dec * 5, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10.5",
                                    "type": "number",
                                    "value": 10.5
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal multiplication (left)",
                                    "text": "\"decimal multiplication (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:4 / $dec, 1",
                                    "name": "round",
                                    "text": "(round:4 / $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "/",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal division (right)",
                                    "text": "\"decimal division (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec / 2, 2",
                                    "name": "round",
                                    "text": "(round:$dec / 2, 2)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "/",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1.05",
                                    "type": "number",
                                    "value": 1.05
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal division (left)",
                                    "text": "\"decimal division (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:5 % $dec, 1",
                                    "name": "round",
                                    "text": "(round:5 % $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "%",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.8",
                                    "type": "number",
                                    "value": 0.8
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal modulo (right)",
                                    "text": "\"decimal modulo (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec % 2, 1",
                                    "name": "round",
                                    "text": "(round:$dec % 2, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "%",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.1",
                                    "type": "number",
                                    "value": 0.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal modulo (left)",
                                    "text": "\"decimal modulo (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 > $dec, \"decimal greater than (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 > $dec, \"decimal greater than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than (right)",
                                    "text": "\"decimal greater than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec > 2, \"decimal greater than (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec > 2, \"decimal greater than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than (left)",
                                    "text": "\"decimal greater than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 >= $dec, \"decimal greater than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 >= $dec, \"decimal greater than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than or equal (right)",
                                    "text": "\"decimal greater than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec >= 2, \"decimal greater than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec >= 2, \"decimal greater than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than or equal (left)",
                                    "text": "\"decimal greater than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 < $dec, \"decimal less than (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 < $dec, \"decimal less than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than (right)",
                                    "text": "\"decimal less than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec < 3, \"decimal less than (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec < 3, \"decimal less than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than (left)",
                                    "text": "\"decimal less than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 <= $dec, \"decimal less than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 <= $dec, \"decimal less than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than or equal (right)",
                                    "text": "\"decimal less than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec <= 3, \"decimal less than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec <= 3, \"decimal less than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<=",
                                    "type": "inequality"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than or equal (left)",
                                    "text": "\"decimal less than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": " macros ",
                            "text": "",
                            "tokens": [
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "macros ",
                                    "type": "text"
                                }
                            ],
                            "type": "comment"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (ceil:3.1) is 4, \"macro: ceil\"",
                            "name": "assert",
                            "text": "(assert: (ceil:3.1) is 4, \"macro: ceil\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ceil:3.1",
                                    "name": "ceil",
                                    "text": "(ceil:3.1)",
                                    "tokens": [
                                        {
                                            "text": "ceil:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "3.1",
                                            "type": "number",
                                            "value": 3.1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: ceil",
                                    "text": "\"macro: ceil\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (floor:-3.1) is -4, \"macro: floor\"",
                            "name": "assert",
                            "text": "(assert: (floor:-3.1) is -4, \"macro: floor\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "floor:-3.1",
                                    "name": "floor",
                                    "text": "(floor:-3.1)",
                                    "tokens": [
                                        {
                                            "text": "floor:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "3.1",
                                            "type": "number",
                                            "value": 3.1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: floor",
                                    "text": "\"macro: floor\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (num:\"2\"+\"5\") is 25, \"macro: num\"",
                            "name": "assert",
                            "text": "(assert: (num:\"2\"+\"5\") is 25, \"macro: num\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "num:\"2\"+\"5\"",
                                    "name": "num",
                                    "text": "(num:\"2\"+\"5\")",
                                    "tokens": [
                                        {
                                            "text": "num:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "2",
                                            "text": "\"2\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "innerText": "5",
                                            "text": "\"5\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "25",
                                    "type": "number",
                                    "value": 25
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: num",
                                    "text": "\"macro: num\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (number:\"2\"+\"5\") is 25, \"macro: number\"",
                            "name": "assert",
                            "text": "(assert: (number:\"2\"+\"5\") is 25, \"macro: number\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "number:\"2\"+\"5\"",
                                    "name": "number",
                                    "text": "(number:\"2\"+\"5\")",
                                    "tokens": [
                                        {
                                            "text": "number:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "2",
                                            "text": "\"2\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "innerText": "5",
                                            "text": "\"5\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "25",
                                    "type": "number",
                                    "value": 25
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: number",
                                    "text": "\"macro: number\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (random:1,6) is in (range:1,6), \"macro: random\"",
                            "name": "assert",
                            "text": "(assert: (random:1,6) is in (range:1,6), \"macro: random\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "random:1,6",
                                    "name": "random",
                                    "text": "(random:1,6)",
                                    "tokens": [
                                        {
                                            "text": "random:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "6",
                                            "type": "number",
                                            "value": 6
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "range:1,6",
                                    "name": "range",
                                    "text": "(range:1,6)",
                                    "tokens": [
                                        {
                                            "text": "range:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "6",
                                            "type": "number",
                                            "value": 6
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: random",
                                    "text": "\"macro: random\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Markup_Scope_Styles",
            "Pid": "6",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n//italic(assert-style:\"italic\", true)//\n(assert-style:\"italic\", false)\n\n''bold(assert-style:\"bold\", true)''\n(assert-style:\"bold\", false)\n\n~~strikeout(assert-style:\"del\", true)~~\n(assert-style:\"del\", false)\n\n*emphasis(assert-style:\"em\", true)*\n(assert-style:\"em\", false)\n\n**strong(assert-style:\"strong\", true)**\n(assert-style:\"strong\", false)\n\n^^superscript(assert-style:\"sup\", true)^^\n(assert-style:\"sup\", false)\n\n* Bulleted item (assert-style:\"bulleted\", 1)\n(assert-style:\"bulleted\", false)\n\n  ** Indented bulleted item (assert-style:\"bulleted\", 2)\n  (assert-style:\"bulleted\", false)\n  \n  *** Indented bulleted ite3 (assert-style:\"bulleted\", 3)\n  (assert-style:\"bulleted\", false)\n  \n  0. Numbered item (assert-style:\"numbered\", 1)\n   0. Numbered item 2 (assert-style:\"numbered\", 1)\n 0.0. Indented numbered item (assert-style:\"numbered\", 2)\n (assert-style:\"numbered\", false)\n  \n  #Level 1 heading  (assert-style:\"heading\", 1)\n    (assert-style:\"heading\", false)\n   ###Level 3 heading  (assert-style:\"heading\", 3)\n     (assert-style:\"heading\", false)\n ######Level 6 heading  (assert-style:\"heading\", 6)\n   (assert-style:\"heading\", false)\n\n(pass:)\n",
                    "text": "{\n//italic(assert-style:\"italic\", true)//\n(assert-style:\"italic\", false)\n\n''bold(assert-style:\"bold\", true)''\n(assert-style:\"bold\", false)\n\n~~strikeout(assert-style:\"del\", true)~~\n(assert-style:\"del\", false)\n\n*emphasis(assert-style:\"em\", true)*\n(assert-style:\"em\", false)\n\n**strong(assert-style:\"strong\", true)**\n(assert-style:\"strong\", false)\n\n^^superscript(assert-style:\"sup\", true)^^\n(assert-style:\"sup\", false)\n\n* Bulleted item (assert-style:\"bulleted\", 1)\n(assert-style:\"bulleted\", false)\n\n  ** Indented bulleted item (assert-style:\"bulleted\", 2)\n  (assert-style:\"bulleted\", false)\n  \n  *** Indented bulleted ite3 (assert-style:\"bulleted\", 3)\n  (assert-style:\"bulleted\", false)\n  \n  0. Numbered item (assert-style:\"numbered\", 1)\n   0. Numbered item 2 (assert-style:\"numbered\", 1)\n 0.0. Indented numbered item (assert-style:\"numbered\", 2)\n (assert-style:\"numbered\", false)\n  \n  #Level 1 heading  (assert-style:\"heading\", 1)\n    (assert-style:\"heading\", false)\n   ###Level 3 heading  (assert-style:\"heading\", 3)\n     (assert-style:\"heading\", false)\n ######Level 6 heading  (assert-style:\"heading\", 6)\n   (assert-style:\"heading\", false)\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "italic(assert-style:\"italic\", true)",
                            "text": "//italic(assert-style:\"italic\", true)//",
                            "tokens": [
                                {
                                    "text": "italic",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"italic\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"italic\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "italic",
                                            "text": "\"italic\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "italic"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"italic\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"italic\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "italic",
                                    "text": "\"italic\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "bold(assert-style:\"bold\", true)",
                            "text": "''bold(assert-style:\"bold\", true)''",
                            "tokens": [
                                {
                                    "text": "bold",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"bold\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"bold\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "bold",
                                            "text": "\"bold\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "bold"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"bold\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"bold\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "bold",
                                    "text": "\"bold\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "strikeout(assert-style:\"del\", true)",
                            "text": "~~strikeout(assert-style:\"del\", true)~~",
                            "tokens": [
                                {
                                    "text": "strikeout",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"del\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"del\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "del",
                                            "text": "\"del\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "del"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"del\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"del\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "del",
                                    "text": "\"del\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "emphasis(assert-style:\"em\", true)",
                            "text": "*emphasis(assert-style:\"em\", true)*",
                            "tokens": [
                                {
                                    "text": "emphasis",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"em\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"em\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "em",
                                            "text": "\"em\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "em"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"em\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"em\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "em",
                                    "text": "\"em\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "strong(assert-style:\"strong\", true)",
                            "text": "**strong(assert-style:\"strong\", true)**",
                            "tokens": [
                                {
                                    "text": "strong",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"strong\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"strong\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "strong",
                                            "text": "\"strong\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "strong"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"strong\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"strong\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "strong",
                                    "text": "\"strong\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "superscript(assert-style:\"sup\", true)",
                            "text": "^^superscript(assert-style:\"sup\", true)^^",
                            "tokens": [
                                {
                                    "text": "superscript",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"sup\", true",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"sup\", true)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "sup",
                                            "text": "\"sup\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "sup"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert-style:\"sup\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"sup\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "sup",
                                    "text": "\"sup\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 1,
                            "innerText": "Bulleted item (assert-style:\"bulleted\", 1)",
                            "text": "* Bulleted item (assert-style:\"bulleted\", 1)\n",
                            "tokens": [
                                {
                                    "text": "Bulleted item ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"bulleted\", 1",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"bulleted\", 1)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "bulleted",
                                            "text": "\"bulleted\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "bulleted"
                        },
                        {
                            "innerText": "assert-style:\"bulleted\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"bulleted\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "bulleted",
                                    "text": "\"bulleted\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 2,
                            "innerText": "Indented bulleted item (assert-style:\"bulleted\", 2)",
                            "text": "  ** Indented bulleted item (assert-style:\"bulleted\", 2)\n",
                            "tokens": [
                                {
                                    "text": "Indented bulleted item ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"bulleted\", 2",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"bulleted\", 2)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "bulleted",
                                            "text": "\"bulleted\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "bulleted"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"bulleted\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"bulleted\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "bulleted",
                                    "text": "\"bulleted\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 3,
                            "innerText": "Indented bulleted ite3 (assert-style:\"bulleted\", 3)",
                            "text": "  *** Indented bulleted ite3 (assert-style:\"bulleted\", 3)\n",
                            "tokens": [
                                {
                                    "text": "Indented bulleted ite3 ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"bulleted\", 3",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"bulleted\", 3)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "bulleted",
                                            "text": "\"bulleted\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "bulleted"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"bulleted\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"bulleted\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "bulleted",
                                    "text": "\"bulleted\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 1,
                            "innerText": "Numbered item (assert-style:\"numbered\", 1)",
                            "text": "  0. Numbered item (assert-style:\"numbered\", 1)\n",
                            "tokens": [
                                {
                                    "text": "Numbered item ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"numbered\", 1",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"numbered\", 1)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "numbered",
                                            "text": "\"numbered\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "numbered"
                        },
                        {
                            "depth": 1,
                            "innerText": "Numbered item 2 (assert-style:\"numbered\", 1)",
                            "text": "   0. Numbered item 2 (assert-style:\"numbered\", 1)\n",
                            "tokens": [
                                {
                                    "text": "Numbered item 2 ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"numbered\", 1",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"numbered\", 1)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "numbered",
                                            "text": "\"numbered\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "numbered"
                        },
                        {
                            "depth": 2,
                            "innerText": "Indented numbered item (assert-style:\"numbered\", 2)",
                            "text": " 0.0. Indented numbered item (assert-style:\"numbered\", 2)\n",
                            "tokens": [
                                {
                                    "text": "Indented numbered item ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"numbered\", 2",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"numbered\", 2)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "numbered",
                                            "text": "\"numbered\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "numbered"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"numbered\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"numbered\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "numbered",
                                    "text": "\"numbered\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 1,
                            "innerText": "Level 1 heading  (assert-style:\"heading\", 1)",
                            "text": "  #Level 1 heading  (assert-style:\"heading\", 1)\n",
                            "tokens": [
                                {
                                    "text": "Level 1 heading  ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"heading\", 1",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"heading\", 1)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "heading",
                                            "text": "\"heading\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "heading"
                        },
                        {
                            "text": "    ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"heading\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"heading\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "heading",
                                    "text": "\"heading\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 3,
                            "innerText": "Level 3 heading  (assert-style:\"heading\", 3)",
                            "text": "   ###Level 3 heading  (assert-style:\"heading\", 3)\n",
                            "tokens": [
                                {
                                    "text": "Level 3 heading  ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"heading\", 3",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"heading\", 3)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "heading",
                                            "text": "\"heading\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "heading"
                        },
                        {
                            "text": "     ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"heading\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"heading\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "heading",
                                    "text": "\"heading\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "depth": 6,
                            "innerText": "Level 6 heading  (assert-style:\"heading\", 6)",
                            "text": " ######Level 6 heading  (assert-style:\"heading\", 6)\n",
                            "tokens": [
                                {
                                    "text": "Level 6 heading  ",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-style:\"heading\", 6",
                                    "name": "assertstyle",
                                    "text": "(assert-style:\"heading\", 6)",
                                    "tokens": [
                                        {
                                            "text": "assert-style:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "heading",
                                            "text": "\"heading\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "6",
                                            "type": "number",
                                            "value": 6
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "heading"
                        },
                        {
                            "text": "   ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"heading\", false",
                            "name": "assertstyle",
                            "text": "(assert-style:\"heading\", false)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "heading",
                                    "text": "\"heading\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Markup_HTML",
            "Pid": "7",
            "Tags": "NoException",
            "Tokens": [
                {
                    "text": "raw HTML",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_Verbatim",
            "Pid": "8",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "(print: \"verbatim1\")",
                    "text": "`(print: \"verbatim1\")`",
                    "type": "verbatim"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "assert-text: \"(print: \\\"verbatim1\\\")\", \"verbatim\"",
                    "name": "asserttext",
                    "text": "(assert-text: \"(print: \\\"verbatim1\\\")\", \"verbatim\")",
                    "tokens": [
                        {
                            "text": "assert-text:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "(print: \\\"verbatim1\\\")",
                            "text": "\"(print: \\\"verbatim1\\\")\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "verbatim",
                            "text": "\"verbatim\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "(print: \"verbatim2\")",
                    "text": "``(print: \"verbatim2\")``",
                    "type": "verbatim"
                },
                {
                    "innerText": "assert-text: \"(print: \\\"verbatim2\\\")\", \"verbatim\"",
                    "name": "asserttext",
                    "text": "(assert-text: \"(print: \\\"verbatim2\\\")\", \"verbatim\")",
                    "tokens": [
                        {
                            "text": "assert-text:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "(print: \\\"verbatim2\\\")",
                            "text": "\"(print: \\\"verbatim2\\\")\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "verbatim",
                            "text": "\"verbatim\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "(print: \"verbatim3\")",
                    "text": "```(print: \"verbatim3\")```",
                    "type": "verbatim"
                },
                {
                    "innerText": "assert-text: \"(print: \\\"verbatim3\\\")\", \"verbatim\"",
                    "name": "asserttext",
                    "text": "(assert-text: \"(print: \\\"verbatim3\\\")\", \"verbatim\")",
                    "tokens": [
                        {
                            "text": "assert-text:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "(print: \\\"verbatim3\\\")",
                            "text": "\"(print: \\\"verbatim3\\\")\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "verbatim",
                            "text": "\"verbatim\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_Unsupported",
            "Pid": "9",
            "Tags": "",
            "Tokens": [
                {
                    "align": "right",
                    "text": "==>\n",
                    "type": "align"
                },
                {
                    "text": "This is right-aligned",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "align": "center",
                    "text": "=><=\n",
                    "type": "align"
                },
                {
                    "text": "This is centered",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "align": "justify",
                    "text": "<==>\n",
                    "type": "align"
                },
                {
                    "text": "This is justified",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "align": "left",
                    "text": "<==\n",
                    "type": "align"
                },
                {
                    "text": "This is left-aligned (undoes the above)",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "align": 38,
                    "text": "===><=\n",
                    "type": "align"
                },
                {
                    "text": "This has margins 3/4 left, 1/4 right",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "align": 8,
                    "text": "=><=====\n",
                    "type": "align"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "      ---\n",
                    "type": "hr"
                },
                {
                    "text": "  ----\n",
                    "type": "hr"
                },
                {
                    "text": "     -----\n",
                    "type": "hr"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_LineBreaks",
            "Pid": "10",
            "Tags": "",
            "Tokens": [
                {
                    "text": "This line",
                    "type": "text"
                },
                {
                    "text": "\\\n",
                    "type": "escapedLine"
                },
                {
                    "text": "and this line",
                    "type": "text"
                },
                {
                    "text": "\n\\",
                    "type": "escapedLine"
                },
                {
                    "text": "and this line, are actually just one line.",
                    "type": "text"
                },
                {
                    "text": "\\\n",
                    "type": "escapedLine"
                },
                {
                    "innerText": "assert-no-output: typeof(UnityTwine.TwineLineBreak)",
                    "name": "assertnooutput",
                    "text": "(assert-no-output: typeof(UnityTwine.TwineLineBreak))",
                    "tokens": [
                        {
                            "text": "assert-no-output:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "typeof",
                            "type": "text"
                        },
                        {
                            "innerText": "UnityTwine.TwineLineBreak",
                            "text": "(UnityTwine.TwineLineBreak)",
                            "tokens": [
                                {
                                    "text": "UnityTwine.TwineLineBreak",
                                    "type": "text"
                                }
                            ],
                            "type": "grouping"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_NakedVar",
            "Pid": "11",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "set: $naked = \"I can see your butt :)\"",
                    "name": "set",
                    "text": "(set: $naked = \"I can see your butt :)\")",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "naked",
                            "text": "$naked",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "=",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "I can see your butt :)",
                            "text": "\"I can see your butt :)\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "name": "naked",
                    "text": "$naked",
                    "type": "variable"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "assert-text: \"I can see your butt :)\", \"naked var\"",
                    "name": "asserttext",
                    "text": "(assert-text: \"I can see your butt :)\", \"naked var\")",
                    "tokens": [
                        {
                            "text": "assert-text:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "I can see your butt :)",
                            "text": "\"I can see your butt :)\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "naked var",
                            "text": "\"naked var\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_Scope_Hooks",
            "Pid": "12",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "hook:\"c0\"",
                    "name": "hook",
                    "text": "(hook:\"c0\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "c0",
                            "text": "\"c0\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "\n  |c1>[ballroom(assert-hook: \"c1\")]\n  [bright red(assert-hook: \"c2\")]<c2|\n  (assert-hook: \"c0\")\n",
                    "text": "[\n  |c1>[ballroom(assert-hook: \"c1\")]\n  [bright red(assert-hook: \"c2\")]",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "ballroom(assert-hook: \"c1\")",
                            "name": "c1",
                            "text": "|c1>[ballroom(assert-hook: \"c1\")]",
                            "tokens": [
                                {
                                    "text": "ballroom",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-hook: \"c1\"",
                                    "name": "asserthook",
                                    "text": "(assert-hook: \"c1\")",
                                    "tokens": [
                                        {
                                            "text": "assert-hook:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "c1",
                                            "text": "\"c1\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "hook"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "bright red(assert-hook: \"c2\")",
                            "name": "c2",
                            "text": "[bright red(assert-hook: \"c2\")]",
                            "tokens": [
                                {
                                    "text": "bright red",
                                    "type": "text"
                                },
                                {
                                    "innerText": "assert-hook: \"c2\"",
                                    "name": "asserthook",
                                    "text": "(assert-hook: \"c2\")",
                                    "tokens": [
                                        {
                                            "text": "assert-hook:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "c2",
                                            "text": "\"c2\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "hook"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-hook: \"c0\"",
                            "name": "asserthook",
                            "text": "(assert-hook: \"c0\")",
                            "tokens": [
                                {
                                    "text": "assert-hook:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "c0",
                                    "text": "\"c0\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Vars_It",
            "Pid": "13",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $red = \"eg\")\n(set: $red = it + \"g\")\n(assert: $red is 'egg' and its length is 3, \"it/its\")\n(pass:)\n",
                    "text": "{\n(set: $red = \"eg\")\n(set: $red = it + \"g\")\n(assert: $red is 'egg' and its length is 3, \"it/its\")\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $red = \"eg\"",
                            "name": "set",
                            "text": "(set: $red = \"eg\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "red",
                                    "text": "$red",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "eg",
                                    "text": "\"eg\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $red = it + \"g\"",
                            "name": "set",
                            "text": "(set: $red = it + \"g\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "red",
                                    "text": "$red",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "it",
                                    "type": "identifier"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "g",
                                    "text": "\"g\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $red is 'egg' and its length is 3, \"it/its\"",
                            "name": "assert",
                            "text": "(assert: $red is 'egg' and its length is 3, \"it/its\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "red",
                                    "text": "$red",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "egg",
                                    "text": "'egg'",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "length",
                                    "text": "its length",
                                    "type": "itsProperty"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "it/its",
                                    "text": "\"it/its\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Macros_SetPutMove",
            "Pid": "14",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n\t(set: $setTest to 32.1)\n\t(assert: $setTest is 32.1, \"set\")\n\t\n\t(put: 45 into $putTest)\n\t(assert: $putTest is 45, \"put\")\n\t(pass:)\n\t\n\t(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))\n\t\n\t(assert: $a's length is 2, \"move from array\")\n\t(assert: $b is 111, \"move from array\")\n\t\n\t\n\t\n\t(pass:)\n",
                    "text": "{\n\t(set: $setTest to 32.1)\n\t(assert: $setTest is 32.1, \"set\")\n\t\n\t(put: 45 into $putTest)\n\t(assert: $putTest is 45, \"put\")\n\t(pass:)\n\t\n\t(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))\n\t\n\t(assert: $a's length is 2, \"move from array\")\n\t(assert: $b is 111, \"move from array\")\n\t\n\t\n\t\n\t(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $setTest to 32.1",
                            "name": "set",
                            "text": "(set: $setTest to 32.1)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "setTest",
                                    "text": "$setTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "32.1",
                                    "type": "number",
                                    "value": 32.1
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $setTest is 32.1, \"set\"",
                            "name": "assert",
                            "text": "(assert: $setTest is 32.1, \"set\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "setTest",
                                    "text": "$setTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "32.1",
                                    "type": "number",
                                    "value": 32.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set",
                                    "text": "\"set\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "put: 45 into $putTest",
                            "name": "put",
                            "text": "(put: 45 into $putTest)",
                            "tokens": [
                                {
                                    "text": "put:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "45",
                                    "type": "number",
                                    "value": 45
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "putTest",
                                    "text": "$putTest",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $putTest is 45, \"put\"",
                            "name": "assert",
                            "text": "(assert: $putTest is 45, \"put\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "putTest",
                                    "text": "$putTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "45",
                                    "type": "number",
                                    "value": 45
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "put",
                                    "text": "\"put\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $a = (a:111,(a:\"cheese\",\"bread\"),3)",
                            "name": "set",
                            "text": "(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:111,(a:\"cheese\",\"bread\"),3",
                                    "name": "a",
                                    "text": "(a:111,(a:\"cheese\",\"bread\"),3)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "111",
                                            "type": "number",
                                            "value": 111
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "a:\"cheese\",\"bread\"",
                                            "name": "a",
                                            "text": "(a:\"cheese\",\"bread\")",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "innerText": "cheese",
                                                    "text": "\"cheese\"",
                                                    "type": "string"
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "innerText": "bread",
                                                    "text": "\"bread\"",
                                                    "type": "string"
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $a's length is 2, \"move from array\"",
                            "name": "assert",
                            "text": "(assert: $a's length is 2, \"move from array\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "move from array",
                                    "text": "\"move from array\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is 111, \"move from array\"",
                            "name": "assert",
                            "text": "(assert: $b is 111, \"move from array\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "111",
                                    "type": "number",
                                    "value": 111
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "move from array",
                                    "text": "\"move from array\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Array",
            "Pid": "15",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $ar to (a:\"red\",\"blue\",\"green\"))\n\n(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality\")\n(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")\n(assert: $ar is not (a:9,1,2), \"equality (left)\")\n(assert: $ar contains \"green\", \"contains\")\n(assert: \"green\" is in $ar, \"contained by\")\n\n(assert: $ar's 1st is \"red\", \"position (named)\")\n(assert: $ar's (2+1) is \"green\", \"position (expression)\")\n(assert: $ar's last is \"green\", \"position (last)\")\n(assert: $ar's 3rdlast is \"red\", \"position (number from last)\")\n(assert: $ar's (a:1,3) is (a:\"red\",\"green\"), \"position array\")\n\n(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")\n(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")\n(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")\n\n(set:$ar's 1st to \"yellow\")\n(assert: \"yellow\" is $ar's 1st, \"set position\")\n(put: \"brown\" into $ar's 2nd)\n(assert: \"brown\" is $ar's (2), \"put position\")\n\n<!-- macros --> \n(assert: (count:(a:5,6,5,5,8), 5) is 3, \"macro: count\")\n(assert: (range:1,14) is (a:1,2,3,4,5,6,7,8,9,10,11,12,13,14) and (range:2,-2) is (a:-2,-1,0,1,2), \"macro: range\")\n(assert: (rotated: 1, 'A','B','C','D') is (a: 'D','A','B','C') and (rotated: -2, 'A','B','C','D') is (a: 'C','D','A','B'), \"macro: rotated\")\n(assert: (shuffled:1,3,4,5)'s length is 4, \"macro: shuffled\")\n(assert: (sorted: \"9\", \"1\", \"Z\", \"a\", \"é\") is (a: \"1\",\"9\",\"a\",\"é\", \"Z\"), \"macro: sorted\")\n(assert: (subarray: (range: 21,25), 3, 5) is (a: 23, 24, 25), \"macro: subarray\")\n\n(pass:)\n",
                    "text": "{\n(set: $ar to (a:\"red\",\"blue\",\"green\"))\n\n(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality\")\n(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")\n(assert: $ar is not (a:9,1,2), \"equality (left)\")\n(assert: $ar contains \"green\", \"contains\")\n(assert: \"green\" is in $ar, \"contained by\")\n\n(assert: $ar's 1st is \"red\", \"position (named)\")\n(assert: $ar's (2+1) is \"green\", \"position (expression)\")\n(assert: $ar's last is \"green\", \"position (last)\")\n(assert: $ar's 3rdlast is \"red\", \"position (number from last)\")\n(assert: $ar's (a:1,3) is (a:\"red\",\"green\"), \"position array\")\n\n(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")\n(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")\n(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")\n\n(set:$ar's 1st to \"yellow\")\n(assert: \"yellow\" is $ar's 1st, \"set position\")\n(put: \"brown\" into $ar's 2nd)\n(assert: \"brown\" is $ar's (2), \"put position\")\n\n \n(assert: (count:(a:5,6,5,5,8), 5) is 3, \"macro: count\")\n(assert: (range:1,14) is (a:1,2,3,4,5,6,7,8,9,10,11,12,13,14) and (range:2,-2) is (a:-2,-1,0,1,2), \"macro: range\")\n(assert: (rotated: 1, 'A','B','C','D') is (a: 'D','A','B','C') and (rotated: -2, 'A','B','C','D') is (a: 'C','D','A','B'), \"macro: rotated\")\n(assert: (shuffled:1,3,4,5)'s length is 4, \"macro: shuffled\")\n(assert: (sorted: \"9\", \"1\", \"Z\", \"a\", \"é\") is (a: \"1\",\"9\",\"a\",\"é\", \"Z\"), \"macro: sorted\")\n(assert: (subarray: (range: 21,25), 3, 5) is (a: 23, 24, 25), \"macro: subarray\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $ar to (a:\"red\",\"blue\",\"green\")",
                            "name": "set",
                            "text": "(set: $ar to (a:\"red\",\"blue\",\"green\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality\"",
                            "name": "assert",
                            "text": "(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality",
                                    "text": "\"equality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar is not (a:9,1,2), \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $ar is not (a:9,1,2), \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:9,1,2",
                                    "name": "a",
                                    "text": "(a:9,1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "9",
                                            "type": "number",
                                            "value": 9
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar contains \"green\", \"contains\"",
                            "name": "assert",
                            "text": "(assert: $ar contains \"green\", \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"green\" is in $ar, \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"green\" is in $ar, \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar's 1st is \"red\", \"position (named)\"",
                            "name": "assert",
                            "text": "(assert: $ar's 1st is \"red\", \"position (named)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "red",
                                    "text": "\"red\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (named)",
                                    "text": "\"position (named)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar's (2+1) is \"green\", \"position (expression)\"",
                            "name": "assert",
                            "text": "(assert: $ar's (2+1) is \"green\", \"position (expression)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "2+1",
                                    "text": "(2+1)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (expression)",
                                    "text": "\"position (expression)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar's last is \"green\", \"position (last)\"",
                            "name": "assert",
                            "text": "(assert: $ar's last is \"green\", \"position (last)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "last",
                                    "text": "'s last",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (last)",
                                    "text": "\"position (last)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar's 3rdlast is \"red\", \"position (number from last)\"",
                            "name": "assert",
                            "text": "(assert: $ar's 3rdlast is \"red\", \"position (number from last)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "3rdlast",
                                    "text": "'s 3rdlast",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "red",
                                    "text": "\"red\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (number from last)",
                                    "text": "\"position (number from last)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $ar's (a:1,3) is (a:\"red\",\"green\"), \"position array\"",
                            "name": "assert",
                            "text": "(assert: $ar's (a:1,3) is (a:\"red\",\"green\"), \"position array\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "a:1,3",
                                    "name": "a",
                                    "text": "(a:1,3)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position array",
                                    "text": "\"position array\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\"",
                            "name": "assert",
                            "text": "(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2,1,2",
                                    "name": "a",
                                    "text": "(a:1,2,1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join",
                                    "text": "\"join\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\"",
                            "name": "assert",
                            "text": "(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,1,2,3,4,5",
                                    "name": "a",
                                    "text": "(a:1,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:3,4,5",
                                    "name": "a",
                                    "text": "(a:3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "subtract",
                                    "text": "\"subtract\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\"",
                            "name": "assert",
                            "text": "(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: 0, ...(a:1,2,3,4), 5",
                                    "name": "a",
                                    "text": "(a: 0, ...(a:1,2,3,4), 5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "...",
                                            "type": "spread"
                                        },
                                        {
                                            "innerText": "a:1,2,3,4",
                                            "name": "a",
                                            "text": "(a:1,2,3,4)",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "2",
                                                    "type": "number",
                                                    "value": 2
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "3",
                                                    "type": "number",
                                                    "value": 3
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:0,1,2,3,4,5",
                                    "name": "a",
                                    "text": "(a:0,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "spread",
                                    "text": "\"spread\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set:$ar's 1st to \"yellow\"",
                            "name": "set",
                            "text": "(set:$ar's 1st to \"yellow\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "yellow",
                                    "text": "\"yellow\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"yellow\" is $ar's 1st, \"set position\"",
                            "name": "assert",
                            "text": "(assert: \"yellow\" is $ar's 1st, \"set position\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "yellow",
                                    "text": "\"yellow\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set position",
                                    "text": "\"set position\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "put: \"brown\" into $ar's 2nd",
                            "name": "put",
                            "text": "(put: \"brown\" into $ar's 2nd)",
                            "tokens": [
                                {
                                    "text": "put:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "brown",
                                    "text": "\"brown\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "2nd",
                                    "text": "'s 2nd",
                                    "type": "property"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"brown\" is $ar's (2), \"put position\"",
                            "name": "assert",
                            "text": "(assert: \"brown\" is $ar's (2), \"put position\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "brown",
                                    "text": "\"brown\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "2",
                                    "text": "(2)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "put position",
                                    "text": "\"put position\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": " macros ",
                            "text": "",
                            "tokens": [
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "macros ",
                                    "type": "text"
                                }
                            ],
                            "type": "comment"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (count:(a:5,6,5,5,8), 5) is 3, \"macro: count\"",
                            "name": "assert",
                            "text": "(assert: (count:(a:5,6,5,5,8), 5) is 3, \"macro: count\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "count:(a:5,6,5,5,8), 5",
                                    "name": "count",
                                    "text": "(count:(a:5,6,5,5,8), 5)",
                                    "tokens": [
                                        {
                                            "text": "count:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a:5,6,5,5,8",
                                            "name": "a",
                                            "text": "(a:5,6,5,5,8)",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": "5",
                                                    "type": "number",
                                                    "value": 5
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "6",
                                                    "type": "number",
                                                    "value": 6
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "5",
                                                    "type": "number",
                                                    "value": 5
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "5",
                                                    "type": "number",
                                                    "value": 5
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "8",
                                                    "type": "number",
                                                    "value": 8
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: count",
                                    "text": "\"macro: count\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (range:1,14) is (a:1,2,3,4,5,6,7,8,9,10,11,12,13,14) and (range:2,-2) is (a:-2,-1,0,1,2), \"macro: range\"",
                            "name": "assert",
                            "text": "(assert: (range:1,14) is (a:1,2,3,4,5,6,7,8,9,10,11,12,13,14) and (range:2,-2) is (a:-2,-1,0,1,2), \"macro: range\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "range:1,14",
                                    "name": "range",
                                    "text": "(range:1,14)",
                                    "tokens": [
                                        {
                                            "text": "range:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "14",
                                            "type": "number",
                                            "value": 14
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2,3,4,5,6,7,8,9,10,11,12,13,14",
                                    "name": "a",
                                    "text": "(a:1,2,3,4,5,6,7,8,9,10,11,12,13,14)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "6",
                                            "type": "number",
                                            "value": 6
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "7",
                                            "type": "number",
                                            "value": 7
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "8",
                                            "type": "number",
                                            "value": 8
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "9",
                                            "type": "number",
                                            "value": 9
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "10",
                                            "type": "number",
                                            "value": 10
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "11",
                                            "type": "number",
                                            "value": 11
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "12",
                                            "type": "number",
                                            "value": 12
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "13",
                                            "type": "number",
                                            "value": 13
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "14",
                                            "type": "number",
                                            "value": 14
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "range:2,-2",
                                    "name": "range",
                                    "text": "(range:2,-2)",
                                    "tokens": [
                                        {
                                            "text": "range:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:-2,-1,0,1,2",
                                    "name": "a",
                                    "text": "(a:-2,-1,0,1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: range",
                                    "text": "\"macro: range\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (rotated: 1, 'A','B','C','D') is (a: 'D','A','B','C') and (rotated: -2, 'A','B','C','D') is (a: 'C','D','A','B'), \"macro: rotated\"",
                            "name": "assert",
                            "text": "(assert: (rotated: 1, 'A','B','C','D') is (a: 'D','A','B','C') and (rotated: -2, 'A','B','C','D') is (a: 'C','D','A','B'), \"macro: rotated\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "rotated: 1, 'A','B','C','D'",
                                    "name": "rotated",
                                    "text": "(rotated: 1, 'A','B','C','D')",
                                    "tokens": [
                                        {
                                            "text": "rotated:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "A",
                                            "text": "'A'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "B",
                                            "text": "'B'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "C",
                                            "text": "'C'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "D",
                                            "text": "'D'",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: 'D','A','B','C'",
                                    "name": "a",
                                    "text": "(a: 'D','A','B','C')",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "D",
                                            "text": "'D'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "A",
                                            "text": "'A'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "B",
                                            "text": "'B'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "C",
                                            "text": "'C'",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "rotated: -2, 'A','B','C','D'",
                                    "name": "rotated",
                                    "text": "(rotated: -2, 'A','B','C','D')",
                                    "tokens": [
                                        {
                                            "text": "rotated:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "A",
                                            "text": "'A'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "B",
                                            "text": "'B'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "C",
                                            "text": "'C'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "D",
                                            "text": "'D'",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: 'C','D','A','B'",
                                    "name": "a",
                                    "text": "(a: 'C','D','A','B')",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "C",
                                            "text": "'C'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "D",
                                            "text": "'D'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "A",
                                            "text": "'A'",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "B",
                                            "text": "'B'",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: rotated",
                                    "text": "\"macro: rotated\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (shuffled:1,3,4,5)'s length is 4, \"macro: shuffled\"",
                            "name": "assert",
                            "text": "(assert: (shuffled:1,3,4,5)'s length is 4, \"macro: shuffled\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "shuffled:1,3,4,5",
                                    "name": "shuffled",
                                    "text": "(shuffled:1,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "shuffled:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: shuffled",
                                    "text": "\"macro: shuffled\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (sorted: \"9\", \"1\", \"Z\", \"a\", \"é\") is (a: \"1\",\"9\",\"a\",\"é\", \"Z\"), \"macro: sorted\"",
                            "name": "assert",
                            "text": "(assert: (sorted: \"9\", \"1\", \"Z\", \"a\", \"é\") is (a: \"1\",\"9\",\"a\",\"é\", \"Z\"), \"macro: sorted\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "sorted: \"9\", \"1\", \"Z\", \"a\", \"é\"",
                                    "name": "sorted",
                                    "text": "(sorted: \"9\", \"1\", \"Z\", \"a\", \"é\")",
                                    "tokens": [
                                        {
                                            "text": "sorted:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "9",
                                            "text": "\"9\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "1",
                                            "text": "\"1\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "Z",
                                            "text": "\"Z\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "é",
                                            "text": "\"é\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: \"1\",\"9\",\"a\",\"é\", \"Z\"",
                                    "name": "a",
                                    "text": "(a: \"1\",\"9\",\"a\",\"é\", \"Z\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "1",
                                            "text": "\"1\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "9",
                                            "text": "\"9\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "é",
                                            "text": "\"é\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "Z",
                                            "text": "\"Z\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: sorted",
                                    "text": "\"macro: sorted\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (subarray: (range: 21,25), 3, 5) is (a: 23, 24, 25), \"macro: subarray\"",
                            "name": "assert",
                            "text": "(assert: (subarray: (range: 21,25), 3, 5) is (a: 23, 24, 25), \"macro: subarray\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "subarray: (range: 21,25), 3, 5",
                                    "name": "subarray",
                                    "text": "(subarray: (range: 21,25), 3, 5)",
                                    "tokens": [
                                        {
                                            "text": "subarray:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "range: 21,25",
                                            "name": "range",
                                            "text": "(range: 21,25)",
                                            "tokens": [
                                                {
                                                    "text": "range:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": " ",
                                                    "type": "whitespace"
                                                },
                                                {
                                                    "text": "21",
                                                    "type": "number",
                                                    "value": 21
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "25",
                                                    "type": "number",
                                                    "value": 25
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: 23, 24, 25",
                                    "name": "a",
                                    "text": "(a: 23, 24, 25)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "23",
                                            "type": "number",
                                            "value": 23
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "24",
                                            "type": "number",
                                            "value": 24
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "25",
                                            "type": "number",
                                            "value": 25
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: subarray",
                                    "text": "\"macro: subarray\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Dataset",
            "Pid": "16",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $dst to (dataset:\"red\",\"blue\",\"green\"))\n\n(assert: $dst's length is 3, \"length\")\n(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality\")\n(assert: $dst is not (dataset:9,1,2), \"inequality\")\n(assert: $dst contains \"green\", \"contains\")\n(assert: \"green\" is in $dst, \"contained by\")\n\n(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")\n(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")\n(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")\n\n(pass:)\n",
                    "text": "{\n(set: $dst to (dataset:\"red\",\"blue\",\"green\"))\n\n(assert: $dst's length is 3, \"length\")\n(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality\")\n(assert: $dst is not (dataset:9,1,2), \"inequality\")\n(assert: $dst contains \"green\", \"contains\")\n(assert: \"green\" is in $dst, \"contained by\")\n\n(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")\n(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")\n(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $dst to (dataset:\"red\",\"blue\",\"green\")",
                            "name": "set",
                            "text": "(set: $dst to (dataset:\"red\",\"blue\",\"green\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:\"red\",\"blue\",\"green\"",
                                    "name": "dataset",
                                    "text": "(dataset:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $dst's length is 3, \"length\"",
                            "name": "assert",
                            "text": "(assert: $dst's length is 3, \"length\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "length",
                                    "text": "\"length\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality\"",
                            "name": "assert",
                            "text": "(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:\"red\",\"blue\",\"green\"",
                                    "name": "dataset",
                                    "text": "(dataset:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality",
                                    "text": "\"equality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $dst is not (dataset:9,1,2), \"inequality\"",
                            "name": "assert",
                            "text": "(assert: $dst is not (dataset:9,1,2), \"inequality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:9,1,2",
                                    "name": "dataset",
                                    "text": "(dataset:9,1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "9",
                                            "type": "number",
                                            "value": 9
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality",
                                    "text": "\"inequality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $dst contains \"green\", \"contains\"",
                            "name": "assert",
                            "text": "(assert: $dst contains \"green\", \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"green\" is in $dst, \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"green\" is in $dst, \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\"",
                            "name": "assert",
                            "text": "(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join",
                                    "text": "\"join\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\"",
                            "name": "assert",
                            "text": "(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2,3,4,5",
                                    "name": "dataset",
                                    "text": "(dataset:1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:5,4,3",
                                    "name": "dataset",
                                    "text": "(dataset:5,4,3)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "subtract",
                                    "text": "\"subtract\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\"",
                            "name": "assert",
                            "text": "(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset: 0, ...(a:1,2,3,4,4,4,4), 5",
                                    "name": "dataset",
                                    "text": "(dataset: 0, ...(a:1,2,3,4,4,4,4), 5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "...",
                                            "type": "spread"
                                        },
                                        {
                                            "innerText": "a:1,2,3,4,4,4,4",
                                            "name": "a",
                                            "text": "(a:1,2,3,4,4,4,4)",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "2",
                                                    "type": "number",
                                                    "value": 2
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "3",
                                                    "type": "number",
                                                    "value": 3
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:0,1,2,3,4,5",
                                    "name": "dataset",
                                    "text": "(dataset:0,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "spread",
                                    "text": "\"spread\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Datamap",
            "Pid": "17",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $map to (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"))\n(assert: $map is (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"), \"equality\")\n(assert: $map is not (datamap:\"juice\",\"apple\", \"vessel\",\"snifter\"), \"inequality\")\n(assert: $map's juice is \"orange\", \"get member (name)\")\n(assert: $map's (\"ve\"+\"ssel\") is \"glass\", \"get member (expression)\")\n(set: $map's (\"juice\") to \"strawberry\")\n\n(assert: $map's juice is \"strawberry\", \"set member (expression)\")\n\n(put: \"bottle\" into $map's \"vessel\")\n(assert: $map's (a:\"juice\",\"vessel\") is (a:\"strawberry\",\"bottle\"), \"get member (subarray)\")\n\n(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")\n\n<!-- macros --> \n(assert: (datanames:$map) is (a:\"juice\", \"vessel\"), \"macro: datanames\")\n(assert: (datavalues:$map) is (a:\"strawberry\",\"bottle\"), \"macro: datavalues\")\n\n(pass:)\n",
                    "text": "{\n(set: $map to (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"))\n(assert: $map is (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"), \"equality\")\n(assert: $map is not (datamap:\"juice\",\"apple\", \"vessel\",\"snifter\"), \"inequality\")\n(assert: $map's juice is \"orange\", \"get member (name)\")\n(assert: $map's (\"ve\"+\"ssel\") is \"glass\", \"get member (expression)\")\n(set: $map's (\"juice\") to \"strawberry\")\n\n(assert: $map's juice is \"strawberry\", \"set member (expression)\")\n\n(put: \"bottle\" into $map's \"vessel\")\n(assert: $map's (a:\"juice\",\"vessel\") is (a:\"strawberry\",\"bottle\"), \"get member (subarray)\")\n\n(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")\n\n \n(assert: (datanames:$map) is (a:\"juice\", \"vessel\"), \"macro: datanames\")\n(assert: (datavalues:$map) is (a:\"strawberry\",\"bottle\"), \"macro: datavalues\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $map to (datamap:\"juice\",\"orange\", \"vessel\",\"glass\")",
                            "name": "set",
                            "text": "(set: $map to (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"juice\",\"orange\", \"vessel\",\"glass\"",
                                    "name": "datamap",
                                    "text": "(datamap:\"juice\",\"orange\", \"vessel\",\"glass\")",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "orange",
                                            "text": "\"orange\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "vessel",
                                            "text": "\"vessel\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "glass",
                                            "text": "\"glass\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map is (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"), \"equality\"",
                            "name": "assert",
                            "text": "(assert: $map is (datamap:\"juice\",\"orange\", \"vessel\",\"glass\"), \"equality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"juice\",\"orange\", \"vessel\",\"glass\"",
                                    "name": "datamap",
                                    "text": "(datamap:\"juice\",\"orange\", \"vessel\",\"glass\")",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "orange",
                                            "text": "\"orange\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "vessel",
                                            "text": "\"vessel\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "glass",
                                            "text": "\"glass\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality",
                                    "text": "\"equality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map is not (datamap:\"juice\",\"apple\", \"vessel\",\"snifter\"), \"inequality\"",
                            "name": "assert",
                            "text": "(assert: $map is not (datamap:\"juice\",\"apple\", \"vessel\",\"snifter\"), \"inequality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"juice\",\"apple\", \"vessel\",\"snifter\"",
                                    "name": "datamap",
                                    "text": "(datamap:\"juice\",\"apple\", \"vessel\",\"snifter\")",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "apple",
                                            "text": "\"apple\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "vessel",
                                            "text": "\"vessel\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "snifter",
                                            "text": "\"snifter\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality",
                                    "text": "\"inequality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's juice is \"orange\", \"get member (name)\"",
                            "name": "assert",
                            "text": "(assert: $map's juice is \"orange\", \"get member (name)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "name": "juice",
                                    "text": "'s juice",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "orange",
                                    "text": "\"orange\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "get member (name)",
                                    "text": "\"get member (name)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's (\"ve\"+\"ssel\") is \"glass\", \"get member (expression)\"",
                            "name": "assert",
                            "text": "(assert: $map's (\"ve\"+\"ssel\") is \"glass\", \"get member (expression)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "\"ve\"+\"ssel\"",
                                    "text": "(\"ve\"+\"ssel\")",
                                    "tokens": [
                                        {
                                            "innerText": "ve",
                                            "text": "\"ve\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "innerText": "ssel",
                                            "text": "\"ssel\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "glass",
                                    "text": "\"glass\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "get member (expression)",
                                    "text": "\"get member (expression)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $map's (\"juice\") to \"strawberry\"",
                            "name": "set",
                            "text": "(set: $map's (\"juice\") to \"strawberry\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "\"juice\"",
                                    "text": "(\"juice\")",
                                    "tokens": [
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "strawberry",
                                    "text": "\"strawberry\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's juice is \"strawberry\", \"set member (expression)\"",
                            "name": "assert",
                            "text": "(assert: $map's juice is \"strawberry\", \"set member (expression)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "name": "juice",
                                    "text": "'s juice",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "strawberry",
                                    "text": "\"strawberry\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set member (expression)",
                                    "text": "\"set member (expression)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "put: \"bottle\" into $map's \"vessel\"",
                            "name": "put",
                            "text": "(put: \"bottle\" into $map's \"vessel\")",
                            "tokens": [
                                {
                                    "text": "put:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "bottle",
                                    "text": "\"bottle\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "vessel",
                                    "text": "\"vessel\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's (a:\"juice\",\"vessel\") is (a:\"strawberry\",\"bottle\"), \"get member (subarray)\"",
                            "name": "assert",
                            "text": "(assert: $map's (a:\"juice\",\"vessel\") is (a:\"strawberry\",\"bottle\"), \"get member (subarray)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "a:\"juice\",\"vessel\"",
                                    "name": "a",
                                    "text": "(a:\"juice\",\"vessel\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "vessel",
                                            "text": "\"vessel\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"strawberry\",\"bottle\"",
                                    "name": "a",
                                    "text": "(a:\"strawberry\",\"bottle\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "strawberry",
                                            "text": "\"strawberry\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "bottle",
                                            "text": "\"bottle\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "get member (subarray)",
                                    "text": "\"get member (subarray)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\"",
                            "name": "assert",
                            "text": "(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"a\",1,\"b\",2",
                                    "name": "datamap",
                                    "text": "(datamap:\"a\",1,\"b\",2)",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "b",
                                            "text": "\"b\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "innerText": "a:\"a\"",
                                    "name": "a",
                                    "text": "(a:\"a\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"b\",2",
                                    "name": "datamap",
                                    "text": "(datamap:\"b\",2)",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "b",
                                            "text": "\"b\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "remove keys (subtraction)",
                                    "text": "\"remove keys (subtraction)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": " macros ",
                            "text": "",
                            "tokens": [
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "macros ",
                                    "type": "text"
                                }
                            ],
                            "type": "comment"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (datanames:$map) is (a:\"juice\", \"vessel\"), \"macro: datanames\"",
                            "name": "assert",
                            "text": "(assert: (datanames:$map) is (a:\"juice\", \"vessel\"), \"macro: datanames\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datanames:$map",
                                    "name": "datanames",
                                    "text": "(datanames:$map)",
                                    "tokens": [
                                        {
                                            "text": "datanames:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "map",
                                            "text": "$map",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"juice\", \"vessel\"",
                                    "name": "a",
                                    "text": "(a:\"juice\", \"vessel\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "vessel",
                                            "text": "\"vessel\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: datanames",
                                    "text": "\"macro: datanames\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (datavalues:$map) is (a:\"strawberry\",\"bottle\"), \"macro: datavalues\"",
                            "name": "assert",
                            "text": "(assert: (datavalues:$map) is (a:\"strawberry\",\"bottle\"), \"macro: datavalues\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datavalues:$map",
                                    "name": "datavalues",
                                    "text": "(datavalues:$map)",
                                    "tokens": [
                                        {
                                            "text": "datavalues:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "map",
                                            "text": "$map",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"strawberry\",\"bottle\"",
                                    "name": "a",
                                    "text": "(a:\"strawberry\",\"bottle\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "strawberry",
                                            "text": "\"strawberry\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "bottle",
                                            "text": "\"bottle\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "macro: datavalues",
                                    "text": "\"macro: datavalues\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Markup_Links",
            "Pid": "18",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n  [[Result]]\n  (assert-link: \"Result\", \"Result\", \"Link without text\")\n  \n  [[Link classic|Result]]\n  (assert-link: \"Link classic\", \"Result\")\n\n  [[Link right->Result]]\n  (assert-link: \"Link right\", \"Result\")\n\n  [[Result<-Link left]]\n  (assert-link: \"Link left\", \"Result\")\n  \n  (link-goto: \"Link-goto macro\", \"Result\")\n  (assert-link: \"Link-goto macro\", \"Result\")\n  \n  (link: \"Link macro\")[]\n  (assert-link: \"Link macro\", null)\n  \n  (pass:)\n",
                    "text": "{\n  [[Result]]\n  (assert-link: \"Result\", \"Result\", \"Link without text\")\n  \n  [[Link classic|Result]]\n  (assert-link: \"Link classic\", \"Result\")\n\n  [[Link right->Result]]\n  (assert-link: \"Link right\", \"Result\")\n\n  [[Result<-Link left]]\n  (assert-link: \"Link left\", \"Result\")\n  \n  (link-goto: \"Link-goto macro\", \"Result\")\n  (assert-link: \"Link-goto macro\", \"Result\")\n  \n  (link: \"Link macro\")[]\n  (assert-link: \"Link macro\", null)\n  \n  (pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link-goto:\"Result\",\"Result\"",
                            "name": "linkgoto",
                            "text": "(link-goto:\"Result\",\"Result\")",
                            "tokens": [
                                {
                                    "text": "link-goto:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Result\", \"Result\", \"Link without text\"",
                            "name": "assertlink",
                            "text": "(assert-link: \"Result\", \"Result\", \"Link without text\")",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link without text",
                                    "text": "\"Link without text\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link-goto:\"Link classic\",\"Result\"",
                            "name": "linkgoto",
                            "text": "(link-goto:\"Link classic\",\"Result\")",
                            "tokens": [
                                {
                                    "text": "link-goto:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "Link classic",
                                    "text": "\"Link classic\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Link classic\", \"Result\"",
                            "name": "assertlink",
                            "text": "(assert-link: \"Link classic\", \"Result\")",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link classic",
                                    "text": "\"Link classic\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link-goto:\"Link right\",\"Result\"",
                            "name": "linkgoto",
                            "text": "(link-goto:\"Link right\",\"Result\")",
                            "tokens": [
                                {
                                    "text": "link-goto:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "Link right",
                                    "text": "\"Link right\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Link right\", \"Result\"",
                            "name": "assertlink",
                            "text": "(assert-link: \"Link right\", \"Result\")",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link right",
                                    "text": "\"Link right\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link-goto:\"Link left\",\"Result\"",
                            "name": "linkgoto",
                            "text": "(link-goto:\"Link left\",\"Result\")",
                            "tokens": [
                                {
                                    "text": "link-goto:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "Link left",
                                    "text": "\"Link left\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Link left\", \"Result\"",
                            "name": "assertlink",
                            "text": "(assert-link: \"Link left\", \"Result\")",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link left",
                                    "text": "\"Link left\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link-goto: \"Link-goto macro\", \"Result\"",
                            "name": "linkgoto",
                            "text": "(link-goto: \"Link-goto macro\", \"Result\")",
                            "tokens": [
                                {
                                    "text": "link-goto:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link-goto macro",
                                    "text": "\"Link-goto macro\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Link-goto macro\", \"Result\"",
                            "name": "assertlink",
                            "text": "(assert-link: \"Link-goto macro\", \"Result\")",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link-goto macro",
                                    "text": "\"Link-goto macro\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Result",
                                    "text": "\"Result\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "link: \"Link macro\"",
                            "name": "link",
                            "text": "(link: \"Link macro\")",
                            "tokens": [
                                {
                                    "text": "link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link macro",
                                    "text": "\"Link macro\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "[]",
                            "type": "hook"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-link: \"Link macro\", null",
                            "name": "assertlink",
                            "text": "(assert-link: \"Link macro\", null)",
                            "tokens": [
                                {
                                    "text": "assert-link:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Link macro",
                                    "text": "\"Link macro\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "null",
                                    "type": "text"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        }
    ]
}