/*
Generated by UnityTwine on 5/31/2015 2:14:18 PM
http://daterre.com/projects/unity-twine
*/
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using UnityTwine;

public class SnoozingStory: TwineStory
{
	public override TwineVar this[string name]
	{
		get
		{
			switch(name)
			{
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
		set
		{
			switch(name)
			{
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
	}


	void Awake() {
		base.Init();
		passageInit_0();
		passageInit_1();
		passageInit_2();
		passageInit_3();
		passageInit_4();
		passageInit_5();
		passageInit_6();
		passageInit_7();
		passageInit_8();
		passageInit_9();
		passageInit_10();
		passageInit_11();
		passageInit_12();
		passageInit_13();
	}
    
	// .............
	// #0: Start

	void passageInit_0()
	{
		this.Passages["Start"] = new TwinePassage("Start", new Dictionary<string,string>(){  }, passageExecute_0);
	}

	IEnumerable<TwineOutput> passageExecute_0()
	{
		yield return new TwineDisplay("alarm");
		
			
	}
    
	// .............
	// #1: StoryTitle

	void passageInit_1()
	{
		this.Passages["StoryTitle"] = new TwinePassage("StoryTitle", new Dictionary<string,string>(){  }, passageExecute_1);
	}

	IEnumerable<TwineOutput> passageExecute_1()
	{
		yield return new TwineText(@"Snoozing");
		
			
	}
    
	// .............
	// #2: StoryAuthor

	void passageInit_2()
	{
		this.Passages["StoryAuthor"] = new TwinePassage("StoryAuthor", new Dictionary<string,string>(){  }, passageExecute_2);
	}

	IEnumerable<TwineOutput> passageExecute_2()
	{
		yield return new TwineText(@"D. A. Terre");
		
			
	}
    
	// .............
	// #3: alarm

	void passageInit_3()
	{
		this.Passages["alarm"] = new TwinePassage("alarm", new Dictionary<string,string>(){  }, passageExecute_3);
	}

	IEnumerable<TwineOutput> passageExecute_3()
	{
		yield return new TwineText(@"...");
		
		yield return new TwineText(@"???");
		
		yield return new TwineText(@"My alarm clock.");
		
		yield return new TwineLink(@"Snooze it.", @"Snooze it.", @"snooze", null, null);
		yield return new TwineLink(@"Get up.", @"Get up.", @"getUp", null, null);
		
			
	}
    
	// .............
	// #4: snooze

	void passageInit_4()
	{
		this.Passages["snooze"] = new TwinePassage("snooze", new Dictionary<string,string>(){  }, passageExecute_4);
	}

	IEnumerable<TwineOutput> passageExecute_4()
	{
		yield return new TwineText(@"I can't handle this now.");
		
		yield return new TwineLink(@"Float away again.", @"Float away again.", @"dreaming", null, null);
		yield return new TwineLink(@"Anxiety kicks in.", @"Anxiety kicks in.", @"anxiety", null, null);
		yield return new TwineLink(@"Her face.", @"Her face.", @"her", null, null);
		
		
			
	}
    
	// .............
	// #5: getUp

	void passageInit_5()
	{
		this.Passages["getUp"] = new TwinePassage("getUp", new Dictionary<string,string>(){  }, passageExecute_5);
	}

	IEnumerable<TwineOutput> passageExecute_5()
	{
		yield return new TwineText(@"I'm out of coffee.");
		
			
	}
    
	// .............
	// #6: dreaming

	void passageInit_6()
	{
		this.Passages["dreaming"] = new TwinePassage("dreaming", new Dictionary<string,string>(){  }, passageExecute_6);
	}

	IEnumerable<TwineOutput> passageExecute_6()
	{
		yield return new TwineDisplay(either("sea", "street", "machine"));
		
			
	}
    
	// .............
	// #7: her

	void passageInit_7()
	{
		this.Passages["her"] = new TwinePassage("her", new Dictionary<string,string>(){  }, passageExecute_7);
	}

	IEnumerable<TwineOutput> passageExecute_7()
	{
		yield return new TwineText(@"Hair behind her ears. My fingers slide through. So gentle.");
		
		yield return new TwineText(@"Oh, her neck.");
		
		yield return new TwineText(@"Why is she not here?");
		
		yield return new TwineText(@"You know why.");
		
		yield return new TwineText(@"It burns.");
		
		yield return new TwineLink(@"Keep my eyes closed.", @"Keep my eyes closed.", @"alarm", null, null);
		
			
	}
    
	// .............
	// #8: sea

	void passageInit_8()
	{
		this.Passages["sea"] = new TwinePassage("sea", new Dictionary<string,string>(){  }, passageExecute_8);
	}

	IEnumerable<TwineOutput> passageExecute_8()
	{
		yield return new TwineText(@"i can breath");
		
		yield return new TwineText(@"i can fly");
		
		yield return new TwineText(@"i can't see the sky.");
		
		yield return new TwineText(@"just go deep");
		
		yield return new TwineText(@"it's warm");
		
		yield return new TwineText(@"they want me to sleep");
		
		yield return new TwineLink(@"to die.", @"to die.", @"alarm", null, null);
		
			
	}
    
	// .............
	// #9: street

	void passageInit_9()
	{
		this.Passages["street"] = new TwinePassage("street", new Dictionary<string,string>(){  }, passageExecute_9);
	}

	IEnumerable<TwineOutput> passageExecute_9()
	{
		yield return new TwineText(@"Shit shit Shit. I'm late.");
		
		yield return new TwineText(@"Did I take my keys? Shit. Where are they?");
		yield return new TwineText(@"My bag is empty. No, there's a half eaten sandwich in there. It's hers.");
		
		yield return new TwineText(@"That day in the park. Should throw it out. But maybe she'll want it?");
		
		yield return new TwineText(@"Her lips.");
		
		yield return new TwineText(@"Everyone is going to be mad at me.");
		
		yield return new TwineLink(@"I'm starting to run.", @"I'm starting to run.", @"alarm", null, null);
		
			
	}
    
	// .............
	// #10: machine

	void passageInit_10()
	{
		this.Passages["machine"] = new TwinePassage("machine", new Dictionary<string,string>(){  }, passageExecute_10);
	}

	IEnumerable<TwineOutput> passageExecute_10()
	{
		yield return new TwineText(@"I can fit it. It fits. It fits!");
		
		yield return new TwineText(@"I'm so good.");
		
		yield return new TwineText(@"Oh, those parts. I can fit them too.");
		
		yield return new TwineText(@"Ha! No problem.");
		
		yield return new TwineText(@"Yeah? See? You see that?");
		
		yield return new TwineText(@"Watch and learn you fuckers.");
		
		yield return new TwineLink(@"I just need more time!", @"I just need more time!", @"alarm", null, null);
		
			
	}
    
	// .............
	// #11: anxiety

	void passageInit_11()
	{
		this.Passages["anxiety"] = new TwinePassage("anxiety", new Dictionary<string,string>(){  }, passageExecute_11);
	}

	IEnumerable<TwineOutput> passageExecute_11()
	{
		yield return new TwineDisplay(either("work", "relationship"));
		
			
	}
    
	// .............
	// #12: relationship

	void passageInit_12()
	{
		this.Passages["relationship"] = new TwinePassage("relationship", new Dictionary<string,string>(){  }, passageExecute_12);
	}

	IEnumerable<TwineOutput> passageExecute_12()
	{
		yield return new TwineText(@"I need to call her. Why didn't I call her last night?");
		
		yield return new TwineText(@"I said I would.");
		
		yield return new TwineText(@"I'm such a coward. She knows it. She looks at you and she knows it. She pretends not to, she smiles. She's kind.");
		
		yield return new TwineText(@"Just crawl in a hole man.");
		
		yield return new TwineLink(@"Keep my eyes closed.", @"Keep my eyes closed.", @"alarm", null, null);
		
		
		
			
	}
    
	// .............
	// #13: work

	void passageInit_13()
	{
		this.Passages["work"] = new TwinePassage("work", new Dictionary<string,string>(){  }, passageExecute_13);
	}

	IEnumerable<TwineOutput> passageExecute_13()
	{
		yield return new TwineText(@"The presentation. I have till Wednesday morning. That's two days. Two days.");
		
		yield return new TwineText(@"This morning, this afternoon. Tomorrow morning, tomorrow afternoon. No sleep tomorrow night.");
		
		yield return new TwineText(@"Who needs this shit. Powerpoint. Fuck you Powerpoint.");
		
		yield return new TwineLink(@"Keep my eyes closed.", @"Keep my eyes closed.", @"alarm", null, null);
		
			
	}

}