/*
Generated by UnityTwine on 6/4/2015 12:15:44 PM
https://github.com/daterre/UnityTwine
*/
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using UnityTwine;

public class SnoozingStory: TwineStory
{
	public TwineVar again;
	public TwineVar wait;
	public TwineVar dream;
	public override TwineVar this[string name]
	{
		get
		{
			switch(name)
			{
				case "again": return again;
				case "wait": return wait;
				case "dream": return dream;
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
		set
		{
			switch(name)
			{
				case "again": again = value; break;
				case "wait": wait = value; break;
				case "dream": dream = value; break;
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
	}


	void Awake() {
		base.Init();
		passageInit_0();
		passageInit_1();
		passageInit_2();
		passageInit_3();
		passageInit_4();
		passageInit_5();
		passageInit_6();
		passageInit_7();
		passageInit_8();
		passageInit_9();
		passageInit_10();
		passageInit_11();
		passageInit_12();
		passageInit_13();
		passageInit_14();
		passageInit_15();
	}
    
	// .............
	// #0: Start

	void passageInit_0()
	{
		this.Passages["Start"] = new TwinePassage("Start", new Dictionary<string,string>(){  }, passageExecute_0);
	}

	IEnumerable<TwineOutput> passageExecute_0()
	{
		yield return new TwineDisplay("alarm");	
	}
    
	// .............
	// #1: alarm

	void passageInit_1()
	{
		this.Passages["alarm"] = new TwinePassage("alarm", new Dictionary<string,string>(){  }, passageExecute_1);
	}

	IEnumerable<TwineOutput> passageExecute_1()
	{
		if (! again ) { 
		wait=3;yield return new TwineText(@"...");
		yield return new TwineText(@"");
		wait=3;yield return new TwineText(@"???");
		again=true;
		} else { 
		wait=1;yield return new TwineText(@"...");
		} 
		yield return new TwineText(@"");
		wait=1;yield return new TwineText(@"My alarm clock. ");
		yield return new TwineText(@"");
		wait=3;yield return new TwineLink(@"Snooze it.", @"Snooze it.", @"snooze", null, null);
		yield return new TwineLink(@"Get up.", @"Get up.", @"getUp", null, null);	
	}
    
	// .............
	// #2: getUp

	void passageInit_2()
	{
		this.Passages["getUp"] = new TwinePassage("getUp", new Dictionary<string,string>(){  }, passageExecute_2);
	}

	IEnumerable<TwineOutput> passageExecute_2()
	{
		yield return new TwineText(@"I'm out of coffee.");	
	}
    
	// .............
	// #3: snooze

	void passageInit_3()
	{
		this.Passages["snooze"] = new TwinePassage("snooze", new Dictionary<string,string>(){  }, passageExecute_3);
	}

	IEnumerable<TwineOutput> passageExecute_3()
	{
		yield return new TwineText(@"I can't handle this right now.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"dream", @"Dream", @"dreaming", null, null);
		yield return new TwineLink(@"anxiety", @"Anxiety", @"anxiety", null, null);
		yield return new TwineLink(@"her", @"Her", @"her", null, null);	
	}
    
	// .............
	// #4: sea

	void passageInit_4()
	{
		this.Passages["sea"] = new TwinePassage("sea", new Dictionary<string,string>(){  }, passageExecute_4);
	}

	IEnumerable<TwineOutput> passageExecute_4()
	{
		yield return new TwineText(@"i can breath");
		yield return new TwineText(@"");
		yield return new TwineText(@"i can fly");
		yield return new TwineText(@"");
		yield return new TwineText(@"i can't see the sky.");
		yield return new TwineText(@"");
		yield return new TwineText(@"it's warm");
		yield return new TwineText(@"");
		yield return new TwineText(@"just go deep");
		yield return new TwineText(@"");
		yield return new TwineText(@"i will always sleep");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"", @"alarm", null, null);	
	}
    
	// .............
	// #5: her

	void passageInit_5()
	{
		this.Passages["her"] = new TwinePassage("her", new Dictionary<string,string>(){  }, passageExecute_5);
	}

	IEnumerable<TwineOutput> passageExecute_5()
	{
		yield return new TwineText(@"when");
		yield return new TwineText(@"will");
		yield return new TwineText(@"i");
		yield return new TwineText(@"see");
		yield return new TwineText(@"you");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Keep my eyes closed.", @"Keep my eyes closed.", @"alarm", null, null);	
	}
    
	// .............
	// #6: anxiety

	void passageInit_6()
	{
		this.Passages["anxiety"] = new TwinePassage("anxiety", new Dictionary<string,string>(){  }, passageExecute_6);
	}

	IEnumerable<TwineOutput> passageExecute_6()
	{
		yield return new TwineDisplay(either("work", "relationship"));	
	}
    
	// .............
	// #7: dreaming

	void passageInit_7()
	{
		this.Passages["dreaming"] = new TwinePassage("dreaming", new Dictionary<string,string>(){  }, passageExecute_7);
	}

	IEnumerable<TwineOutput> passageExecute_7()
	{
		if (dream == "sea") { 
			dream = either("street", "machine");
		} else if (dream == "street") { 
			dream = either("sea", "machine");
		} else if (dream == "machine") { 
			dream = either("street", "sea");
		} else { 
			dream = either("sea", "street", "sea");
		} 
		yield return new TwineDisplay(dream);	
	}
    
	// .............
	// #8: machine3

	void passageInit_8()
	{
		this.Passages["machine3"] = new TwinePassage("machine3", new Dictionary<string,string>(){  }, passageExecute_8);
	}

	IEnumerable<TwineOutput> passageExecute_8()
	{
		yield return new TwineText(@"Yeah? See? You see that?");
		yield return new TwineText(@"");
		yield return new TwineText(@"Watch and learn you fuckers.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"alarm", null, null);	
	}
    
	// .............
	// #9: relationship

	void passageInit_9()
	{
		this.Passages["relationship"] = new TwinePassage("relationship", new Dictionary<string,string>(){  }, passageExecute_9);
	}

	IEnumerable<TwineOutput> passageExecute_9()
	{
		yield return new TwineText(@"She knows it. She looks at you and she knows it. She pretends not to, she smiles. She's kind. You're not. You're shit. A shitty shit.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Keep my eyes closed.", @"Keep my eyes closed.", @"alarm", null, null);	
	}
    
	// .............
	// #10: machine2

	void passageInit_10()
	{
		this.Passages["machine2"] = new TwinePassage("machine2", new Dictionary<string,string>(){  }, passageExecute_10);
	}

	IEnumerable<TwineOutput> passageExecute_10()
	{
		yield return new TwineText(@"Oh, those. I can fit them too.");
		yield return new TwineText(@"");
		yield return new TwineText(@"Ha! No problem.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"machine3", null, null);	
	}
    
	// .............
	// #11: work

	void passageInit_11()
	{
		this.Passages["work"] = new TwinePassage("work", new Dictionary<string,string>(){  }, passageExecute_11);
	}

	IEnumerable<TwineOutput> passageExecute_11()
	{
		yield return new TwineText(@"Two days to the meeting. Two days.");
		yield return new TwineText(@"No sleep tonight. ");
		yield return new TwineText(@"Who needs this shit.");
		yield return new TwineText(@"Powerpoint. Fuck you Powerpoint.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"powerpoint", @"Keep my eyes closed.", @"alarm", null, null);	
	}
    
	// .............
	// #12: machine

	void passageInit_12()
	{
		this.Passages["machine"] = new TwinePassage("machine", new Dictionary<string,string>(){  }, passageExecute_12);
	}

	IEnumerable<TwineOutput> passageExecute_12()
	{
		yield return new TwineText(@"I can fit it.");
		yield return new TwineText(@"It fits.");
		yield return new TwineText(@"");
		yield return new TwineText(@"I'm so good.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"machine2", null, null);	
	}
    
	// .............
	// #13: street

	void passageInit_13()
	{
		this.Passages["street"] = new TwinePassage("street", new Dictionary<string,string>(){  }, passageExecute_13);
	}

	IEnumerable<TwineOutput> passageExecute_13()
	{
		yield return new TwineText(@"I'm late. ");
		yield return new TwineText(@"Did I take my keys?");
		yield return new TwineText(@"Shit.");
		yield return new TwineText(@"");
		yield return new TwineText(@"");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"street2", null, null);	
	}
    
	// .............
	// #14: street3

	void passageInit_14()
	{
		this.Passages["street3"] = new TwinePassage("street3", new Dictionary<string,string>(){  }, passageExecute_14);
	}

	IEnumerable<TwineOutput> passageExecute_14()
	{
		yield return new TwineText(@"Her lips.");
		yield return new TwineText(@"");
		yield return new TwineText(@"Fucking late.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"alarm", null, null);	
	}
    
	// .............
	// #15: street2

	void passageInit_15()
	{
		this.Passages["street2"] = new TwinePassage("street2", new Dictionary<string,string>(){  }, passageExecute_15);
	}

	IEnumerable<TwineOutput> passageExecute_15()
	{
		yield return new TwineText(@"My bag is empty. No, it's not.");
		yield return new TwineText(@"There's a half eaten sandwich. It's hers.");
		yield return new TwineText(@"");
		yield return new TwineText(@"Maybe she'll want it?");
		yield return new TwineText(@"");
		yield return new TwineLink(@"continue", @"continue", @"street3", null, null);	
	}

}