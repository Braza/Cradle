{
    "console": [
        {
            "type": "message",
            "value": "Loaded the built-in macros."
        }
    ],
    "result": [
        {
            "Name": "Links_Simple",
            "Pid": "1",
            "Tags": "",
            "Tokens": [
                {
                    "text": "This is A.",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                }
            ]
        },
        {
            "Name": "Result",
            "Pid": "2",
            "Tags": "",
            "Tokens": [
                {
                    "text": "Yay! This is the end of the test.",
                    "type": "text"
                }
            ]
        },
        {
            "Name": "Links_Setter",
            "Pid": "3",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "link:\"Continue\"",
                    "name": "link",
                    "text": "(link:\"Continue\")",
                    "tokens": [
                        {
                            "text": "link:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "Continue",
                            "text": "\"Continue\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "{\n\t(set:$test to true)\n}",
                    "text": "[{\n\t(set:$test to true)\n}]",
                    "tokens": [
                        {
                            "innerText": "\n\t(set:$test to true)\n",
                            "text": "{\n\t(set:$test to true)\n}",
                            "tokens": [
                                {
                                    "text": "\n",
                                    "type": "br"
                                },
                                {
                                    "text": "\t",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set:$test to true",
                                    "name": "set",
                                    "text": "(set:$test to true)",
                                    "tokens": [
                                        {
                                            "text": "set:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "test",
                                            "text": "$test",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "to",
                                            "type": "to"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "true",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": "\n",
                                    "type": "br"
                                }
                            ],
                            "type": "collapsed"
                        }
                    ],
                    "type": "hook"
                }
            ]
        },
        {
            "Name": "Links_Abort_Immediate",
            "Pid": "4",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "link:\"Continue\"",
                    "name": "link",
                    "text": "(link:\"Continue\")",
                    "tokens": [
                        {
                            "text": "link:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "Continue",
                            "text": "\"Continue\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "{\n\t(goto:\"Result\")\n\tThis is will not be shown.\n}",
                    "text": "[{\n\t(goto:\"Result\")\n\tThis is will not be shown.\n}]",
                    "tokens": [
                        {
                            "innerText": "\n\t(goto:\"Result\")\n\tThis is will not be shown.\n",
                            "text": "{\n\t(goto:\"Result\")\n\tThis is will not be shown.\n}",
                            "tokens": [
                                {
                                    "text": "\n",
                                    "type": "br"
                                },
                                {
                                    "text": "\t",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "goto:\"Result\"",
                                    "name": "goto",
                                    "text": "(goto:\"Result\")",
                                    "tokens": [
                                        {
                                            "text": "goto:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "Result",
                                            "text": "\"Result\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": "\n",
                                    "type": "br"
                                },
                                {
                                    "text": "\t",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "This is will not be shown.",
                                    "type": "text"
                                },
                                {
                                    "text": "\n",
                                    "type": "br"
                                }
                            ],
                            "type": "collapsed"
                        }
                    ],
                    "type": "hook"
                }
            ]
        },
        {
            "Name": "Links_Abort_Delayed",
            "Pid": "5",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "link:\"Continue\"",
                    "name": "link",
                    "text": "(link:\"Continue\")",
                    "tokens": [
                        {
                            "text": "link:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "Continue",
                            "text": "\"Continue\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "{\n\tThis is will not be shown.\n\t(goto:\"Result\")\n}",
                    "text": "[{\n\tThis is will not be shown.\n\t(goto:\"Result\")\n}]",
                    "tokens": [
                        {
                            "innerText": "\n\tThis is will not be shown.\n\t(goto:\"Result\")\n",
                            "text": "{\n\tThis is will not be shown.\n\t(goto:\"Result\")\n}",
                            "tokens": [
                                {
                                    "text": "\n",
                                    "type": "br"
                                },
                                {
                                    "text": "\t",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "This is will not be shown.",
                                    "type": "text"
                                },
                                {
                                    "text": "\n",
                                    "type": "br"
                                },
                                {
                                    "text": "\t",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "goto:\"Result\"",
                                    "name": "goto",
                                    "text": "(goto:\"Result\")",
                                    "tokens": [
                                        {
                                            "text": "goto:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "Result",
                                            "text": "\"Result\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": "\n",
                                    "type": "br"
                                }
                            ],
                            "type": "collapsed"
                        }
                    ],
                    "type": "hook"
                }
            ]
        },
        {
            "Name": "Vars_StrictMode",
            "Pid": "6",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "set: $strictTest to \"string value\"",
                    "name": "set",
                    "text": "(set: $strictTest to \"string value\")",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "strictTest",
                            "text": "$strictTest",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "to",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "string value",
                            "text": "\"string value\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "set: $strictTest to 12.5",
                    "name": "set",
                    "text": "(set: $strictTest to 12.5)",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "strictTest",
                            "text": "$strictTest",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "to",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "12.5",
                            "type": "number",
                            "value": 12.5
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                }
            ]
        },
        {
            "Name": "Vars_Type_String",
            "Pid": "7",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $str = \"A\")\n(assert: $str is \"A\", \"equality (left)\")\n(assert: \"A\" is $str, \"equality (right)\")\n(assert: $str is not \"ABC\", \"inequality (left)\")\n(assert: \"ABC\" is not $str, \"inequality (right)\")\n\n(set: $str = it + \"B\")\n(assert: $str is \"AB\", \"join operator (left)\")\n\n(set: $str = \"C\" + $str)\n(assert: $str is \"CAB\", \"join operator (right)\")\n\n(assert: $str contains (\"CA\"), \"contains\")\n(assert: $str's 1st is \"C\", \"position fwd\")\n(assert: $str's 2ndlast is \"A\", \"position bkwd\")\n(assert: $str's (3) is \"B\", \"numeric index\")\n(assert: $str's length is 3, \"length\")\n\n(assert: \"Fear\" contains (\"ear\"), \"contains\")\n(assert: \"ugh\" is in (\"Through\"), \"contained by\")\n\n(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")\n(assert: \"YO\"'s last is \"O\", \"position bkwd\")\n(assert: \"PS\"'s (2) is \"S\", \"numeric index\")\n\n(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")\n(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")\n(assert: (2) of (\"PS\") is \"S\", \"numeric index\")\n\n(pass:)\n",
                    "text": "{\n(set: $str = \"A\")\n(assert: $str is \"A\", \"equality (left)\")\n(assert: \"A\" is $str, \"equality (right)\")\n(assert: $str is not \"ABC\", \"inequality (left)\")\n(assert: \"ABC\" is not $str, \"inequality (right)\")\n\n(set: $str = it + \"B\")\n(assert: $str is \"AB\", \"join operator (left)\")\n\n(set: $str = \"C\" + $str)\n(assert: $str is \"CAB\", \"join operator (right)\")\n\n(assert: $str contains (\"CA\"), \"contains\")\n(assert: $str's 1st is \"C\", \"position fwd\")\n(assert: $str's 2ndlast is \"A\", \"position bkwd\")\n(assert: $str's (3) is \"B\", \"numeric index\")\n(assert: $str's length is 3, \"length\")\n\n(assert: \"Fear\" contains (\"ear\"), \"contains\")\n(assert: \"ugh\" is in (\"Through\"), \"contained by\")\n\n(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")\n(assert: \"YO\"'s last is \"O\", \"position bkwd\")\n(assert: \"PS\"'s (2) is \"S\", \"numeric index\")\n\n(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")\n(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")\n(assert: (2) of (\"PS\") is \"S\", \"numeric index\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = \"A\"",
                            "name": "set",
                            "text": "(set: $str = \"A\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"A\", \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"A\", \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"A\" is $str, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: \"A\" is $str, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is not \"ABC\", \"inequality (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is not \"ABC\", \"inequality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ABC",
                                    "text": "\"ABC\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (left)",
                                    "text": "\"inequality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"ABC\" is not $str, \"inequality (right)\"",
                            "name": "assert",
                            "text": "(assert: \"ABC\" is not $str, \"inequality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ABC",
                                    "text": "\"ABC\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality (right)",
                                    "text": "\"inequality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = it + \"B\"",
                            "name": "set",
                            "text": "(set: $str = it + \"B\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "it",
                                    "type": "identifier"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "B",
                                    "text": "\"B\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"AB\", \"join operator (left)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"AB\", \"join operator (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "AB",
                                    "text": "\"AB\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join operator (left)",
                                    "text": "\"join operator (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $str = \"C\" + $str",
                            "name": "set",
                            "text": "(set: $str = \"C\" + $str)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "C",
                                    "text": "\"C\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str is \"CAB\", \"join operator (right)\"",
                            "name": "assert",
                            "text": "(assert: $str is \"CAB\", \"join operator (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "CAB",
                                    "text": "\"CAB\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join operator (right)",
                                    "text": "\"join operator (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str contains (\"CA\"), \"contains\"",
                            "name": "assert",
                            "text": "(assert: $str contains (\"CA\"), \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"CA\"",
                                    "text": "(\"CA\")",
                                    "tokens": [
                                        {
                                            "innerText": "CA",
                                            "text": "\"CA\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's 1st is \"C\", \"position fwd\"",
                            "name": "assert",
                            "text": "(assert: $str's 1st is \"C\", \"position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "C",
                                    "text": "\"C\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position fwd",
                                    "text": "\"position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's 2ndlast is \"A\", \"position bkwd\"",
                            "name": "assert",
                            "text": "(assert: $str's 2ndlast is \"A\", \"position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "2ndlast",
                                    "text": "'s 2ndlast",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "A",
                                    "text": "\"A\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position bkwd",
                                    "text": "\"position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's (3) is \"B\", \"numeric index\"",
                            "name": "assert",
                            "text": "(assert: $str's (3) is \"B\", \"numeric index\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "3",
                                    "text": "(3)",
                                    "tokens": [
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "B",
                                    "text": "\"B\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index",
                                    "text": "\"numeric index\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $str's length is 3, \"length\"",
                            "name": "assert",
                            "text": "(assert: $str's length is 3, \"length\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "str",
                                    "text": "$str",
                                    "type": "variable"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "length",
                                    "text": "\"length\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"Fear\" contains (\"ear\"), \"contains\"",
                            "name": "assert",
                            "text": "(assert: \"Fear\" contains (\"ear\"), \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Fear",
                                    "text": "\"Fear\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"ear\"",
                                    "text": "(\"ear\")",
                                    "tokens": [
                                        {
                                            "innerText": "ear",
                                            "text": "\"ear\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"ugh\" is in (\"Through\"), \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"ugh\" is in (\"Through\"), \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "ugh",
                                    "text": "\"ugh\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"Through\"",
                                    "text": "(\"Through\")",
                                    "tokens": [
                                        {
                                            "innerText": "Through",
                                            "text": "\"Through\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"YO\"'s 1st is \"Y\", \"position fwd\"",
                            "name": "assert",
                            "text": "(assert: \"YO\"'s 1st is \"Y\", \"position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "YO",
                                    "text": "\"YO\"",
                                    "type": "string"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Y",
                                    "text": "\"Y\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position fwd",
                                    "text": "\"position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"YO\"'s last is \"O\", \"position bkwd\"",
                            "name": "assert",
                            "text": "(assert: \"YO\"'s last is \"O\", \"position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "YO",
                                    "text": "\"YO\"",
                                    "type": "string"
                                },
                                {
                                    "name": "last",
                                    "text": "'s last",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "O",
                                    "text": "\"O\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position bkwd",
                                    "text": "\"position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: \"PS\"'s (2) is \"S\", \"numeric index\"",
                            "name": "assert",
                            "text": "(assert: \"PS\"'s (2) is \"S\", \"numeric index\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "PS",
                                    "text": "\"PS\"",
                                    "type": "string"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "2",
                                    "text": "(2)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "S",
                                    "text": "\"S\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index",
                                    "text": "\"numeric index\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\"",
                            "name": "assert",
                            "text": "(assert: 1st of (\"YO\") is \"Y\", \"reverse position fwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "1st",
                                    "text": "1st of",
                                    "type": "belongingProperty"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"YO\"",
                                    "text": "(\"YO\")",
                                    "tokens": [
                                        {
                                            "innerText": "YO",
                                            "text": "\"YO\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Y",
                                    "text": "\"Y\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "reverse position fwd",
                                    "text": "\"reverse position fwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: last of (\"YO\") is \"O\", \"reverse position bkwd\"",
                            "name": "assert",
                            "text": "(assert: last of (\"YO\") is \"O\", \"reverse position bkwd\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "last",
                                    "text": "last of",
                                    "type": "belongingProperty"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"YO\"",
                                    "text": "(\"YO\")",
                                    "tokens": [
                                        {
                                            "innerText": "YO",
                                            "text": "\"YO\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "O",
                                    "text": "\"O\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "reverse position bkwd",
                                    "text": "\"reverse position bkwd\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (2) of (\"PS\") is \"S\", \"numeric index\"",
                            "name": "assert",
                            "text": "(assert: (2) of (\"PS\") is \"S\", \"numeric index\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "2",
                                    "text": "(2)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "of",
                                    "type": "belongingOperator"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"PS\"",
                                    "text": "(\"PS\")",
                                    "tokens": [
                                        {
                                            "innerText": "PS",
                                            "text": "\"PS\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "S",
                                    "text": "\"S\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "numeric index",
                                    "text": "\"numeric index\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Bool",
            "Pid": "8",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n  (set: $b to true)\n  (assert: $b, \"evaluate\")\n  (assert: $b is true, \"equality\")\n  (assert: $b is not false, \"inequality\")\n  (assert: $b and true, \"and operator\")\n  (assert: $b or false, \"or operator\")\n  (assert: not ($b is false), \"not operator\")\n\n  (set: $b2 to $b and true or false)\n  (assert: $b2, \"assignment\")\n  (assert: (4 &gt; 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")\n\n  (pass:)\n",
                    "text": "{\n  (set: $b to true)\n  (assert: $b, \"evaluate\")\n  (assert: $b is true, \"equality\")\n  (assert: $b is not false, \"inequality\")\n  (assert: $b and true, \"and operator\")\n  (assert: $b or false, \"or operator\")\n  (assert: not ($b is false), \"not operator\")\n\n  (set: $b2 to $b and true or false)\n  (assert: $b2, \"assignment\")\n  (assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")\n\n  (pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $b to true",
                            "name": "set",
                            "text": "(set: $b to true)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b, \"evaluate\"",
                            "name": "assert",
                            "text": "(assert: $b, \"evaluate\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "evaluate",
                                    "text": "\"evaluate\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is true, \"equality\"",
                            "name": "assert",
                            "text": "(assert: $b is true, \"equality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality",
                                    "text": "\"equality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is not false, \"inequality\"",
                            "name": "assert",
                            "text": "(assert: $b is not false, \"inequality\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "inequality",
                                    "text": "\"inequality\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b and true, \"and operator\"",
                            "name": "assert",
                            "text": "(assert: $b and true, \"and operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "and operator",
                                    "text": "\"and operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b or false, \"or operator\"",
                            "name": "assert",
                            "text": "(assert: $b or false, \"or operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "or",
                                    "type": "or"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "or operator",
                                    "text": "\"or operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: not ($b is false), \"not operator\"",
                            "name": "assert",
                            "text": "(assert: not ($b is false), \"not operator\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "not",
                                    "type": "not"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "$b is false",
                                    "text": "($b is false)",
                                    "tokens": [
                                        {
                                            "name": "b",
                                            "text": "$b",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "is",
                                            "type": "is"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "false",
                                            "type": "boolean"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "not operator",
                                    "text": "\"not operator\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $b2 to $b and true or false",
                            "name": "set",
                            "text": "(set: $b2 to $b and true or false)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b2",
                                    "text": "$b2",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "or",
                                    "type": "or"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "false",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b2, \"assignment\"",
                            "name": "assert",
                            "text": "(assert: $b2, \"assignment\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b2",
                                    "text": "$b2",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "assignment",
                                    "text": "\"assignment\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (4 &gt; 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\"",
                            "name": "assert",
                            "text": "(assert: (4 > 2) and ((1 is 0) or $b2) and (67*1+1) is 68, \"nesting\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "4 &gt; 2",
                                    "text": "(4 > 2)",
                                    "tokens": [
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "> ",
                                            "type": "text"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "(1 is 0) or $b2",
                                    "text": "((1 is 0) or $b2)",
                                    "tokens": [
                                        {
                                            "innerText": "1 is 0",
                                            "text": "(1 is 0)",
                                            "tokens": [
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": " ",
                                                    "type": "whitespace"
                                                },
                                                {
                                                    "text": "is",
                                                    "type": "is"
                                                },
                                                {
                                                    "text": " ",
                                                    "type": "whitespace"
                                                },
                                                {
                                                    "text": "0",
                                                    "type": "number"
                                                }
                                            ],
                                            "type": "grouping"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "or",
                                            "type": "or"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "b2",
                                            "text": "$b2",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "and",
                                    "type": "and"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "67*1+1",
                                    "text": "(67*1+1)",
                                    "tokens": [
                                        {
                                            "text": "67",
                                            "type": "number",
                                            "value": 67
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "68",
                                    "type": "number",
                                    "value": 68
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "nesting",
                                    "text": "\"nesting\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Number",
            "Pid": "9",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n  (set: $int to 2)\n\n  (assert: 2 + $int is 4, \"int addition (right)\")\n  (assert: $int + 2 is 4, \"int addition (left)\")\n  (assert: 3 - $int is 1, \"int substraction (right)\")\n  (assert: $int - 3 is -1, \"int substraction (left)\")\n  (assert: 5 * $int is 10, \"int multiplication (right)\")\n  (assert: $int * 5 is 10, \"int multiplication (left)\")\n  (assert: 2 / $int is 1, \"int division (right)\")\n  (assert: $int / 2 is 1, \"int division (left)\")\n  (assert: 5 % $int is 1, \"int modulo (right)\")\n  (assert: $int % 2 is 0, \"int modulo (left)\")\n  (assert: 3 &gt; $int, \"int greater than (right)\")\n  (assert: $int &gt; 1, \"int greater than (left)\")\n  (assert: 2 &gt;= $int, \"int greater than or equal (right)\")\n  (assert: $int &gt;= 2, \"int greater than or equal (left)\")\n  (assert: 1 &lt; $int, \"int less than (right)\")\n  (assert: $int &lt; 3, \"int less than (left)\")\n  (assert: 1 &lt;= $int, \"int less than or equal (right)\")\n  (assert: $int &lt;= 3, \"int less than or equal (left)\")\n  \n  (set: $dec to 2.1)\n\n  (assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")\n  (assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")\n  (assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")\n  (assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")\n  (assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")\n  (assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")\n  (assert: (round:4 / $dec, 1) &lt; 2, \"decimal division (right)\")\n  (assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")\n  (assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")\n  (assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")\n  (assert: 3 &gt; $dec, \"decimal greater than (right)\")\n  (assert: $dec &gt; 2, \"decimal greater than (left)\")\n  (assert: 3 &gt;= $dec, \"decimal greater than or equal (right)\")\n  (assert: $dec &gt;= 2, \"decimal greater than or equal (left)\")\n  (assert: 2 &lt; $dec, \"decimal less than (right)\")\n  (assert: $dec &lt; 3, \"decimal less than (left)\")\n  (assert: 2 &lt;= $dec, \"decimal less than or equal (right)\")\n  (assert: $dec &lt;= 3, \"decimal less than or equal (left)\")\n  \n  (pass:)\n",
                    "text": "{\n  (set: $int to 2)\n\n  (assert: 2 + $int is 4, \"int addition (right)\")\n  (assert: $int + 2 is 4, \"int addition (left)\")\n  (assert: 3 - $int is 1, \"int substraction (right)\")\n  (assert: $int - 3 is -1, \"int substraction (left)\")\n  (assert: 5 * $int is 10, \"int multiplication (right)\")\n  (assert: $int * 5 is 10, \"int multiplication (left)\")\n  (assert: 2 / $int is 1, \"int division (right)\")\n  (assert: $int / 2 is 1, \"int division (left)\")\n  (assert: 5 % $int is 1, \"int modulo (right)\")\n  (assert: $int % 2 is 0, \"int modulo (left)\")\n  (assert: 3 > $int, \"int greater than (right)\")\n  (assert: $int > 1, \"int greater than (left)\")\n  (assert: 2 >= $int, \"int greater than or equal (right)\")\n  (assert: $int >= 2, \"int greater than or equal (left)\")\n  (assert: 1 < $int, \"int less than (right)\")\n  (assert: $int < 3, \"int less than (left)\")\n  (assert: 1 <= $int, \"int less than or equal (right)\")\n  (assert: $int <= 3, \"int less than or equal (left)\")\n  \n  (set: $dec to 2.1)\n\n  (assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")\n  (assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")\n  (assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")\n  (assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")\n  (assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")\n  (assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")\n  (assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\")\n  (assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")\n  (assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")\n  (assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")\n  (assert: 3 > $dec, \"decimal greater than (right)\")\n  (assert: $dec > 2, \"decimal greater than (left)\")\n  (assert: 3 >= $dec, \"decimal greater than or equal (right)\")\n  (assert: $dec >= 2, \"decimal greater than or equal (left)\")\n  (assert: 2 < $dec, \"decimal less than (right)\")\n  (assert: $dec < 3, \"decimal less than (left)\")\n  (assert: 2 <= $dec, \"decimal less than or equal (right)\")\n  (assert: $dec <= 3, \"decimal less than or equal (left)\")\n  \n  (pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $int to 2",
                            "name": "set",
                            "text": "(set: $int to 2)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 + $int is 4, \"int addition (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 + $int is 4, \"int addition (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int addition (right)",
                                    "text": "\"int addition (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int + 2 is 4, \"int addition (left)\"",
                            "name": "assert",
                            "text": "(assert: $int + 2 is 4, \"int addition (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4",
                                    "type": "number",
                                    "value": 4
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int addition (left)",
                                    "text": "\"int addition (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 - $int is 1, \"int substraction (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 - $int is 1, \"int substraction (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int substraction (right)",
                                    "text": "\"int substraction (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int - 3 is -1, \"int substraction (left)\"",
                            "name": "assert",
                            "text": "(assert: $int - 3 is -1, \"int substraction (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int substraction (left)",
                                    "text": "\"int substraction (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 5 * $int is 10, \"int multiplication (right)\"",
                            "name": "assert",
                            "text": "(assert: 5 * $int is 10, \"int multiplication (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "*",
                                    "type": "multiplication"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10",
                                    "type": "number",
                                    "value": 10
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int multiplication (right)",
                                    "text": "\"int multiplication (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int * 5 is 10, \"int multiplication (left)\"",
                            "name": "assert",
                            "text": "(assert: $int * 5 is 10, \"int multiplication (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "*",
                                    "type": "multiplication"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10",
                                    "type": "number",
                                    "value": 10
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int multiplication (left)",
                                    "text": "\"int multiplication (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 / $int is 1, \"int division (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 / $int is 1, \"int division (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "/",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int division (right)",
                                    "text": "\"int division (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int / 2 is 1, \"int division (left)\"",
                            "name": "assert",
                            "text": "(assert: $int / 2 is 1, \"int division (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "/",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int division (left)",
                                    "text": "\"int division (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 5 % $int is 1, \"int modulo (right)\"",
                            "name": "assert",
                            "text": "(assert: 5 % $int is 1, \"int modulo (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "5",
                                    "type": "number",
                                    "value": 5
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "%",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int modulo (right)",
                                    "text": "\"int modulo (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int % 2 is 0, \"int modulo (left)\"",
                            "name": "assert",
                            "text": "(assert: $int % 2 is 0, \"int modulo (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "%",
                                    "type": "division"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0",
                                    "type": "number"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int modulo (left)",
                                    "text": "\"int modulo (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 &gt; $int, \"int greater than (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 > $int, \"int greater than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "> ",
                                    "type": "text"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than (right)",
                                    "text": "\"int greater than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int &gt; 1, \"int greater than (left)\"",
                            "name": "assert",
                            "text": "(assert: $int > 1, \"int greater than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "> ",
                                    "type": "text"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than (left)",
                                    "text": "\"int greater than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 &gt;= $int, \"int greater than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 >= $int, \"int greater than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">= ",
                                    "type": "text"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than or equal (right)",
                                    "text": "\"int greater than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int &gt;= 2, \"int greater than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $int >= 2, \"int greater than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">= ",
                                    "type": "text"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int greater than or equal (left)",
                                    "text": "\"int greater than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 1 &lt; $int, \"int less than (right)\"",
                            "name": "assert",
                            "text": "(assert: 1 < $int, \"int less than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "< ",
                                    "type": "text"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than (right)",
                                    "text": "\"int less than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int &lt; 3, \"int less than (left)\"",
                            "name": "assert",
                            "text": "(assert: $int < 3, \"int less than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "< ",
                                    "type": "text"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than (left)",
                                    "text": "\"int less than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 1 &lt;= $int, \"int less than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 1 <= $int, \"int less than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1",
                                    "type": "number",
                                    "value": 1
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<= ",
                                    "type": "text"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than or equal (right)",
                                    "text": "\"int less than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $int &lt;= 3, \"int less than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $int <= 3, \"int less than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "int",
                                    "text": "$int",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<= ",
                                    "type": "text"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "int less than or equal (left)",
                                    "text": "\"int less than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $dec to 2.1",
                            "name": "set",
                            "text": "(set: $dec to 2.1)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2.1",
                                    "type": "number",
                                    "value": 2.1
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:2 + $dec, 1) is 4.1, \"decimal addition (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:2 + $dec, 1",
                                    "name": "round",
                                    "text": "(round:2 + $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4.1",
                                    "type": "number",
                                    "value": 4.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal addition (right)",
                                    "text": "\"decimal addition (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec + 2, 1) is 4.1, \"decimal addition (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec + 2, 1",
                                    "name": "round",
                                    "text": "(round:$dec + 2, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "4.1",
                                    "type": "number",
                                    "value": 4.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal addition (left)",
                                    "text": "\"decimal addition (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:3 - $dec, 1) is 0.9, \"decimal substraction (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:3 - $dec, 1",
                                    "name": "round",
                                    "text": "(round:3 - $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.9",
                                    "type": "number",
                                    "value": 0.9
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal substraction (right)",
                                    "text": "\"decimal substraction (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec - 3, 1) is -0.9, \"decimal substraction (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec - 3, 1",
                                    "name": "round",
                                    "text": "(round:$dec - 3, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "-",
                                            "type": "subtraction"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": "0.9",
                                    "type": "number",
                                    "value": 0.9
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal substraction (left)",
                                    "text": "\"decimal substraction (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:5 * $dec, 1) is 10.5, \"decimal multiplication (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:5 * $dec, 1",
                                    "name": "round",
                                    "text": "(round:5 * $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10.5",
                                    "type": "number",
                                    "value": 10.5
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal multiplication (right)",
                                    "text": "\"decimal multiplication (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec * 5, 1) is 10.5, \"decimal multiplication (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec * 5, 1",
                                    "name": "round",
                                    "text": "(round:$dec * 5, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "*",
                                            "type": "multiplication"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "10.5",
                                    "type": "number",
                                    "value": 10.5
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal multiplication (left)",
                                    "text": "\"decimal multiplication (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:4 / $dec, 1) &lt; 2, \"decimal division (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:4 / $dec, 1) < 2, \"decimal division (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:4 / $dec, 1",
                                    "name": "round",
                                    "text": "(round:4 / $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "/",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "< ",
                                    "type": "text"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal division (right)",
                                    "text": "\"decimal division (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec / 2, 2) is 1.05, \"decimal division (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec / 2, 2",
                                    "name": "round",
                                    "text": "(round:$dec / 2, 2)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "/",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "1.05",
                                    "type": "number",
                                    "value": 1.05
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal division (left)",
                                    "text": "\"decimal division (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\"",
                            "name": "assert",
                            "text": "(assert: (round:5 % $dec, 1) is 0.8, \"decimal modulo (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:5 % $dec, 1",
                                    "name": "round",
                                    "text": "(round:5 % $dec, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "%",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.8",
                                    "type": "number",
                                    "value": 0.8
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal modulo (right)",
                                    "text": "\"decimal modulo (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\"",
                            "name": "assert",
                            "text": "(assert: (round:$dec % 2, 1) is 0.1, \"decimal modulo (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "round:$dec % 2, 1",
                                    "name": "round",
                                    "text": "(round:$dec % 2, 1)",
                                    "tokens": [
                                        {
                                            "text": "round:",
                                            "type": "macroName"
                                        },
                                        {
                                            "name": "dec",
                                            "text": "$dec",
                                            "type": "variable"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "%",
                                            "type": "division"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "0.1",
                                    "type": "number",
                                    "value": 0.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal modulo (left)",
                                    "text": "\"decimal modulo (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 &gt; $dec, \"decimal greater than (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 > $dec, \"decimal greater than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "> ",
                                    "type": "text"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than (right)",
                                    "text": "\"decimal greater than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec &gt; 2, \"decimal greater than (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec > 2, \"decimal greater than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "> ",
                                    "type": "text"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than (left)",
                                    "text": "\"decimal greater than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 3 &gt;= $dec, \"decimal greater than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 3 >= $dec, \"decimal greater than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">= ",
                                    "type": "text"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than or equal (right)",
                                    "text": "\"decimal greater than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec &gt;= 2, \"decimal greater than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec >= 2, \"decimal greater than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": ">= ",
                                    "type": "text"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal greater than or equal (left)",
                                    "text": "\"decimal greater than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 &lt; $dec, \"decimal less than (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 < $dec, \"decimal less than (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "< ",
                                    "type": "text"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than (right)",
                                    "text": "\"decimal less than (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec &lt; 3, \"decimal less than (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec < 3, \"decimal less than (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "< ",
                                    "type": "text"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than (left)",
                                    "text": "\"decimal less than (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: 2 &lt;= $dec, \"decimal less than or equal (right)\"",
                            "name": "assert",
                            "text": "(assert: 2 <= $dec, \"decimal less than or equal (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<= ",
                                    "type": "text"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than or equal (right)",
                                    "text": "\"decimal less than or equal (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dec &lt;= 3, \"decimal less than or equal (left)\"",
                            "name": "assert",
                            "text": "(assert: $dec <= 3, \"decimal less than or equal (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dec",
                                    "text": "$dec",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "<= ",
                                    "type": "text"
                                },
                                {
                                    "text": "3",
                                    "type": "number",
                                    "value": 3
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "decimal less than or equal (left)",
                                    "text": "\"decimal less than or equal (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "  ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Markup_Style",
            "Pid": "10",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n\titalic\n\t(assert-style:\"italic\", true)\n",
                    "text": "//\n\titalic\n\t(assert-style:\"italic\", true)\n//",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "italic",
                            "type": "text"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"italic\", true",
                            "name": "assertstyle",
                            "text": "(assert-style:\"italic\", true)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "italic",
                                    "text": "\"italic\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "italic"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "\n\tbold\n\t(assert-style:\"bold\", true)\n",
                    "text": "''\n\tbold\n\t(assert-style:\"bold\", true)\n''",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "bold",
                            "type": "text"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"bold\", true",
                            "name": "assertstyle",
                            "text": "(assert-style:\"bold\", true)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "bold",
                                    "text": "\"bold\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "bold"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "\n\tstrikeout\n\t(assert-style:\"del\", true)\n",
                    "text": "~~\n\tstrikeout\n\t(assert-style:\"del\", true)\n~~",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "strikeout",
                            "type": "text"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert-style:\"del\", true",
                            "name": "assertstyle",
                            "text": "(assert-style:\"del\", true)",
                            "tokens": [
                                {
                                    "text": "assert-style:",
                                    "type": "macroName"
                                },
                                {
                                    "innerText": "del",
                                    "text": "\"del\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "true",
                                    "type": "boolean"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "del"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "assert-style:\"del\", false",
                    "name": "assertstyle",
                    "text": "(assert-style:\"del\", false)",
                    "tokens": [
                        {
                            "text": "assert-style:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "del",
                            "text": "\"del\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "false",
                            "type": "boolean"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "emphasis",
                    "text": "*emphasis*",
                    "tokens": [
                        {
                            "text": "emphasis",
                            "type": "text"
                        }
                    ],
                    "type": "em"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "emphasis",
                    "text": "**emphasis**",
                    "tokens": [
                        {
                            "text": "emphasis",
                            "type": "text"
                        }
                    ],
                    "type": "strong"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "superscript",
                    "text": "^^superscript^^",
                    "tokens": [
                        {
                            "text": "superscript",
                            "type": "text"
                        }
                    ],
                    "type": "sup"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "font: \"Arial\"",
                    "name": "font",
                    "text": "(font: \"Arial\")",
                    "tokens": [
                        {
                            "text": "font:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "Arial",
                            "text": "\"Arial\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "Looks it's Arial!",
                    "text": "[Looks it's Arial!]",
                    "tokens": [
                        {
                            "text": "Looks it's Arial!",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "color: red",
                    "name": "color",
                    "text": "(color: red)",
                    "tokens": [
                        {
                            "text": "color:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "red",
                            "type": "colour"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "This is red?",
                    "text": "[This is red?]",
                    "tokens": [
                        {
                            "text": "This is red?",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_HTML",
            "Pid": "11",
            "Tags": "",
            "Tokens": [
                {
                    "text": "<mark style='color: red'>raw HTML</mark>",
                    "type": "text"
                }
            ]
        },
        {
            "Name": "Markup_Verbatim",
            "Pid": "12",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "(print: \"verbatim\")",
                    "text": "`(print: \"verbatim\")`",
                    "type": "verbatim"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "(print: \"verbatim\")",
                    "text": "``(print: \"verbatim\")``",
                    "type": "verbatim"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "(print: \"verbatim\")",
                    "text": "```(print: \"verbatim\")```",
                    "type": "verbatim"
                }
            ]
        },
        {
            "Name": "Markup_Unsupported",
            "Pid": "13",
            "Tags": "",
            "Tokens": [
                {
                    "text": "==>",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This is right-aligned",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "=><=",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This is centered",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "<==>",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This is justified",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "<==",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This is left-aligned (undoes the above)",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "===><=",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This has margins 3/4 left, 1/4 right",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "=><=====",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "This has margins 1/6 left, 5/6 right.",
                    "type": "text"
                },
                {
                    "text": "*",
                    "type": "text"
                },
                {
                    "text": " ",
                    "type": "whitespace"
                },
                {
                    "text": "Bulleted item",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "Bulleted item 2",
                    "text": "    *    Bulleted item 2\n",
                    "tokens": [
                        {
                            "text": "Bulleted item 2",
                            "type": "text"
                        }
                    ],
                    "type": "bulleted"
                },
                {
                    "innerText": "Indented bulleted item",
                    "text": "  ** Indented bulleted item\n",
                    "tokens": [
                        {
                            "text": "Indented bulleted item",
                            "type": "text"
                        }
                    ],
                    "type": "bulleted"
                },
                {
                    "text": "  ",
                    "type": "whitespace"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "Numbered item",
                    "text": "  0. Numbered item\n",
                    "tokens": [
                        {
                            "text": "Numbered item",
                            "type": "text"
                        }
                    ],
                    "type": "numbered"
                },
                {
                    "innerText": "Numbered item 2",
                    "text": "   0. Numbered item 2\n",
                    "tokens": [
                        {
                            "text": "Numbered item 2",
                            "type": "text"
                        }
                    ],
                    "type": "numbered"
                },
                {
                    "innerText": "Indented numbered item",
                    "text": " 0.0. Indented numbered item\n",
                    "tokens": [
                        {
                            "text": "Indented numbered item",
                            "type": "text"
                        }
                    ],
                    "type": "numbered"
                },
                {
                    "innerText": "Indented bulleted ite3",
                    "text": "  *** Indented bulleted ite3\n",
                    "tokens": [
                        {
                            "text": "Indented bulleted ite3",
                            "type": "text"
                        }
                    ],
                    "type": "bulleted"
                },
                {
                    "text": "  ",
                    "type": "whitespace"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "Level 1 heading ",
                    "text": "  #Level 1 heading \n",
                    "tokens": [
                        {
                            "text": "Level 1 heading ",
                            "type": "text"
                        }
                    ],
                    "type": "heading"
                },
                {
                    "innerText": "Level 3 heading ",
                    "text": "   ###Level 3 heading \n",
                    "tokens": [
                        {
                            "text": "Level 3 heading ",
                            "type": "text"
                        }
                    ],
                    "type": "heading"
                },
                {
                    "innerText": "Level 6 heading ",
                    "text": " ######Level 6 heading \n",
                    "tokens": [
                        {
                            "text": "Level 6 heading ",
                            "type": "text"
                        }
                    ],
                    "type": "heading"
                },
                {
                    "text": " ",
                    "type": "whitespace"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "   ---\n",
                    "type": "hr"
                },
                {
                    "text": "  ----\n",
                    "type": "hr"
                },
                {
                    "text": "     -----",
                    "type": "hr"
                }
            ]
        },
        {
            "Name": "Markup_LineBreaks",
            "Pid": "14",
            "Tags": "",
            "Tokens": [
                {
                    "text": "This line",
                    "type": "text"
                },
                {
                    "text": "\\\n",
                    "type": "escapedLine"
                },
                {
                    "text": "and this line",
                    "type": "text"
                },
                {
                    "text": "\n\\",
                    "type": "escapedLine"
                },
                {
                    "text": "and this line, are actually just one line.",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                }
            ]
        },
        {
            "Name": "Vars_Naked",
            "Pid": "15",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "set: $naked = \"I can see your butt :)\"",
                    "name": "set",
                    "text": "(set: $naked = \"I can see your butt :)\")",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "naked",
                            "text": "$naked",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "=",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "I can see your butt :)",
                            "text": "\"I can see your butt :)\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "name": "naked",
                    "text": "$naked",
                    "type": "variable"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "assert-text: \"I can see your butt :)\", \"naked var\"",
                    "name": "asserttext",
                    "text": "(assert-text: \"I can see your butt :)\", \"naked var\")",
                    "tokens": [
                        {
                            "text": "assert-text:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "I can see your butt :)",
                            "text": "\"I can see your butt :)\"",
                            "type": "string"
                        },
                        {
                            "text": ",",
                            "type": "comma"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "naked var",
                            "text": "\"naked var\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "pass:",
                    "name": "pass",
                    "text": "(pass:)",
                    "tokens": [
                        {
                            "text": "pass:",
                            "type": "macroName"
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Markup_NakedHooks",
            "Pid": "16",
            "Tags": "",
            "Tokens": [
                {
                    "text": "Your ",
                    "type": "text"
                },
                {
                    "innerText": "hook:\"c1\"",
                    "name": "hook",
                    "text": "(hook:\"c1\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "c1",
                            "text": "\"c1\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "ballroom",
                    "text": "[ballroom]",
                    "tokens": [
                        {
                            "text": "ballroom",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": " ",
                    "type": "whitespace"
                },
                {
                    "text": "is ",
                    "type": "text"
                },
                {
                    "innerText": "hook:\"c2\"",
                    "name": "hook",
                    "text": "(hook:\"c2\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "c2",
                            "text": "\"c2\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "bright red",
                    "text": "[bright red]",
                    "tokens": [
                        {
                            "text": "bright red",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": " ",
                    "type": "whitespace"
                },
                {
                    "text": "with ",
                    "type": "text"
                },
                {
                    "innerText": "hook:\"c3\"",
                    "name": "hook",
                    "text": "(hook:\"c3\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "c3",
                            "text": "\"c3\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "silver streaks",
                    "text": "[silver streaks]",
                    "tokens": [
                        {
                            "text": "silver streaks",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": ",",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "and covered in ",
                    "type": "text"
                },
                {
                    "innerText": "hook:\"ck\"",
                    "name": "hook",
                    "text": "(hook:\"ck\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "ck",
                            "text": "\"ck\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "moonstones",
                    "text": "[moonstones]",
                    "tokens": [
                        {
                            "text": "moonstones",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": ".",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click: ?c1",
                    "name": "click",
                    "text": "(click: ?c1)",
                    "tokens": [
                        {
                            "text": "click:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "c1",
                            "text": "?c1",
                            "type": "hookRef"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "A hand-me-down from your great aunt.",
                    "text": "[A hand-me-down from your great aunt.]",
                    "tokens": [
                        {
                            "text": "A hand-me-down from your great aunt.",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click: ?c2",
                    "name": "click",
                    "text": "(click: ?c2)",
                    "tokens": [
                        {
                            "text": "click:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "c2",
                            "text": "?c2",
                            "type": "hookRef"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "A garish shade, to your reckoning.",
                    "text": "[A garish shade, to your reckoning.]",
                    "tokens": [
                        {
                            "text": "A garish shade, to your reckoning.",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click: ?c3",
                    "name": "click",
                    "text": "(click: ?c3)",
                    "tokens": [
                        {
                            "text": "click:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "c3",
                            "text": "?c3",
                            "type": "hookRef"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "Only their faint shine keeps them from being seen as grey.",
                    "text": "[Only their faint shine keeps them from being seen as grey.]",
                    "tokens": [
                        {
                            "text": "Only their faint shine keeps them from being seen as grey.",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click: ?c4",
                    "name": "click",
                    "text": "(click: ?c4)",
                    "tokens": [
                        {
                            "text": "click:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "c4",
                            "text": "?c4",
                            "type": "hookRef"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "Dreadfully heavy, they weigh you down and make dancing arduous.",
                    "text": "[Dreadfully heavy, they weigh you down and make dancing arduous.]",
                    "tokens": [
                        {
                            "text": "Dreadfully heavy, they weigh you down and make dancing arduous.",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                }
            ]
        },
        {
            "Name": "Vars_It",
            "Pid": "17",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "print: $red is 'egg' and its length is 3",
                    "name": "print",
                    "text": "(print: $red is 'egg' and its length is 3)",
                    "tokens": [
                        {
                            "text": "print:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "red",
                            "text": "$red",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "is",
                            "type": "is"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "egg",
                            "text": "'egg'",
                            "type": "string"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "and",
                            "type": "and"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "length",
                            "text": "its length",
                            "type": "itsProperty"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "is",
                            "type": "is"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "3",
                            "type": "number",
                            "value": 3
                        }
                    ],
                    "type": "macro"
                }
            ]
        },
        {
            "Name": "Macros_SetPutMove",
            "Pid": "18",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n\t(set: $setTest to 32.1)\n\t(assert: $setTest is 32.1, \"set\")\n\t\n\t(put: 45 into $putTest)\n\t(assert: $putTest is 45, \"put\")\n\t(pass:)\n\t\n\t(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))\n\t(move: $a's 1st into $b)\n\t(assert: $a's length is 2, \"move from array\")\n\t(assert: $b is 111, \"move from array\")\n\t\n\t(move: 32 into $a's 1st)\n\t(assert: $a's 1st is (a:32,\"bread\"), \"double depth move\")\n\t\n\t(pass:)\n",
                    "text": "{\n\t(set: $setTest to 32.1)\n\t(assert: $setTest is 32.1, \"set\")\n\t\n\t(put: 45 into $putTest)\n\t(assert: $putTest is 45, \"put\")\n\t(pass:)\n\t\n\t(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))\n\t(move: $a's 1st into $b)\n\t(assert: $a's length is 2, \"move from array\")\n\t(assert: $b is 111, \"move from array\")\n\t\n\t(move: 32 into $a's 1st)\n\t(assert: $a's 1st is (a:32,\"bread\"), \"double depth move\")\n\t\n\t(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $setTest to 32.1",
                            "name": "set",
                            "text": "(set: $setTest to 32.1)",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "setTest",
                                    "text": "$setTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "32.1",
                                    "type": "number",
                                    "value": 32.1
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $setTest is 32.1, \"set\"",
                            "name": "assert",
                            "text": "(assert: $setTest is 32.1, \"set\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "setTest",
                                    "text": "$setTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "32.1",
                                    "type": "number",
                                    "value": 32.1
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set",
                                    "text": "\"set\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "put: 45 into $putTest",
                            "name": "put",
                            "text": "(put: 45 into $putTest)",
                            "tokens": [
                                {
                                    "text": "put:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "45",
                                    "type": "number",
                                    "value": 45
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "putTest",
                                    "text": "$putTest",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $putTest is 45, \"put\"",
                            "name": "assert",
                            "text": "(assert: $putTest is 45, \"put\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "putTest",
                                    "text": "$putTest",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "45",
                                    "type": "number",
                                    "value": 45
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "put",
                                    "text": "\"put\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $a = (a:111,(a:\"cheese\",\"bread\"),3)",
                            "name": "set",
                            "text": "(set: $a = (a:111,(a:\"cheese\",\"bread\"),3))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "=",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:111,(a:\"cheese\",\"bread\"),3",
                                    "name": "a",
                                    "text": "(a:111,(a:\"cheese\",\"bread\"),3)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "111",
                                            "type": "number",
                                            "value": 111
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "a:\"cheese\",\"bread\"",
                                            "name": "a",
                                            "text": "(a:\"cheese\",\"bread\")",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "innerText": "cheese",
                                                    "text": "\"cheese\"",
                                                    "type": "string"
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "innerText": "bread",
                                                    "text": "\"bread\"",
                                                    "type": "string"
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "move: $a's 1st into $b",
                            "name": "move",
                            "text": "(move: $a's 1st into $b)",
                            "tokens": [
                                {
                                    "text": "move:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $a's length is 2, \"move from array\"",
                            "name": "assert",
                            "text": "(assert: $a's length is 2, \"move from array\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "name": "length",
                                    "text": "'s length",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "2",
                                    "type": "number",
                                    "value": 2
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "move from array",
                                    "text": "\"move from array\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $b is 111, \"move from array\"",
                            "name": "assert",
                            "text": "(assert: $b is 111, \"move from array\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "b",
                                    "text": "$b",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "111",
                                    "type": "number",
                                    "value": 111
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "move from array",
                                    "text": "\"move from array\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "move: 32 into $a's 1st",
                            "name": "move",
                            "text": "(move: 32 into $a's 1st)",
                            "tokens": [
                                {
                                    "text": "move:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "32",
                                    "type": "number",
                                    "value": 32
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $a's 1st is (a:32,\"bread\"), \"double depth move\"",
                            "name": "assert",
                            "text": "(assert: $a's 1st is (a:32,\"bread\"), \"double depth move\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "a",
                                    "text": "$a",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:32,\"bread\"",
                                    "name": "a",
                                    "text": "(a:32,\"bread\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "32",
                                            "type": "number",
                                            "value": 32
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "bread",
                                            "text": "\"bread\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "double depth move",
                                    "text": "\"double depth move\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Array",
            "Pid": "19",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n\t(set: $ar to (a:\"red\",\"blue\",\"green\"))\n\t\n\t(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality (left)\")\n\t(assert: $ar is not (a:9,1,2), \"equality (left)\")\n\t(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")\n\t(assert: $ar's 1st is \"red\", \"position (named)\")\n\t(assert: $ar's (2+1) is \"green\", \"position (expression)\")\n\t(assert: $ar's last is \"green\", \"position (last)\")\n\t(assert: $ar contains (\"green\"), \"contains\")\n\t(assert: \"green\" is in ($ar), \"contained by\")\n\t\n\t(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")\n\t(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")\n\t(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")\n\t\n\t(pass:)\n",
                    "text": "{\n\t(set: $ar to (a:\"red\",\"blue\",\"green\"))\n\t\n\t(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality (left)\")\n\t(assert: $ar is not (a:9,1,2), \"equality (left)\")\n\t(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")\n\t(assert: $ar's 1st is \"red\", \"position (named)\")\n\t(assert: $ar's (2+1) is \"green\", \"position (expression)\")\n\t(assert: $ar's last is \"green\", \"position (last)\")\n\t(assert: $ar contains (\"green\"), \"contains\")\n\t(assert: \"green\" is in ($ar), \"contained by\")\n\t\n\t(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")\n\t(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")\n\t(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")\n\t\n\t(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $ar to (a:\"red\",\"blue\",\"green\")",
                            "name": "set",
                            "text": "(set: $ar to (a:\"red\",\"blue\",\"green\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $ar is (a:\"red\",\"blue\",\"green\"), \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar is not (a:9,1,2), \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $ar is not (a:9,1,2), \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:9,1,2",
                                    "name": "a",
                                    "text": "(a:9,1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "9",
                                            "type": "number",
                                            "value": 9
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: (a:\"red\",\"blue\",\"green\") is $ar, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:\"red\",\"blue\",\"green\"",
                                    "name": "a",
                                    "text": "(a:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar's 1st is \"red\", \"position (named)\"",
                            "name": "assert",
                            "text": "(assert: $ar's 1st is \"red\", \"position (named)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "1st",
                                    "text": "'s 1st",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "red",
                                    "text": "\"red\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (named)",
                                    "text": "\"position (named)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar's (2+1) is \"green\", \"position (expression)\"",
                            "name": "assert",
                            "text": "(assert: $ar's (2+1) is \"green\", \"position (expression)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "2+1",
                                    "text": "(2+1)",
                                    "tokens": [
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": "+",
                                            "type": "addition"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (expression)",
                                    "text": "\"position (expression)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar's last is \"green\", \"position (last)\"",
                            "name": "assert",
                            "text": "(assert: $ar's last is \"green\", \"position (last)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "name": "last",
                                    "text": "'s last",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "position (last)",
                                    "text": "\"position (last)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $ar contains (\"green\"), \"contains\"",
                            "name": "assert",
                            "text": "(assert: $ar contains (\"green\"), \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "ar",
                                    "text": "$ar",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"green\"",
                                    "text": "(\"green\")",
                                    "tokens": [
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: \"green\" is in ($ar), \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"green\" is in ($ar), \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "$ar",
                                    "text": "($ar)",
                                    "tokens": [
                                        {
                                            "name": "ar",
                                            "text": "$ar",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\"",
                            "name": "assert",
                            "text": "(assert: (a:1,2) + (a:1,2) is (a:1,2,1,2), \"join\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2,1,2",
                                    "name": "a",
                                    "text": "(a:1,2,1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join",
                                    "text": "\"join\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\"",
                            "name": "assert",
                            "text": "(assert: (a:1,1,2,3,4,5) - (a:1,2) is (a:3,4,5), \"subtract\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,1,2,3,4,5",
                                    "name": "a",
                                    "text": "(a:1,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:1,2",
                                    "name": "a",
                                    "text": "(a:1,2)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:3,4,5",
                                    "name": "a",
                                    "text": "(a:3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "subtract",
                                    "text": "\"subtract\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\"",
                            "name": "assert",
                            "text": "(assert: (a: 0, ...(a:1,2,3,4), 5) is (a:0,1,2,3,4,5), \"spread\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a: 0, ...(a:1,2,3,4), 5",
                                    "name": "a",
                                    "text": "(a: 0, ...(a:1,2,3,4), 5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "...",
                                            "type": "spread"
                                        },
                                        {
                                            "innerText": "a:1,2,3,4",
                                            "name": "a",
                                            "text": "(a:1,2,3,4)",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "2",
                                                    "type": "number",
                                                    "value": 2
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "3",
                                                    "type": "number",
                                                    "value": 3
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "a:0,1,2,3,4,5",
                                    "name": "a",
                                    "text": "(a:0,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "spread",
                                    "text": "\"spread\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Dataset",
            "Pid": "20",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n\t(set: $dst to (dataset:\"red\",\"blue\",\"green\"))\n\t\n\t(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality (left)\")\n\t(assert: $dst is not (dataset:9,1,2), \"equality (left)\")\n\t(assert: (dataset:\"blue\",\"green\",\"red\") is $dst, \"equality (right)\")\n\t(assert: $dst contains (\"green\"), \"contains\")\n\t(assert: \"green\" is in ($dst), \"contained by\")\n\t\n\t(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")\n\t(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")\n\t(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")\n\t(pass:)\n",
                    "text": "{\n\t(set: $dst to (dataset:\"red\",\"blue\",\"green\"))\n\t\n\t(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality (left)\")\n\t(assert: $dst is not (dataset:9,1,2), \"equality (left)\")\n\t(assert: (dataset:\"blue\",\"green\",\"red\") is $dst, \"equality (right)\")\n\t(assert: $dst contains (\"green\"), \"contains\")\n\t(assert: \"green\" is in ($dst), \"contained by\")\n\t\n\t(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")\n\t(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")\n\t(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")\n\t(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "set: $dst to (dataset:\"red\",\"blue\",\"green\")",
                            "name": "set",
                            "text": "(set: $dst to (dataset:\"red\",\"blue\",\"green\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:\"red\",\"blue\",\"green\"",
                                    "name": "dataset",
                                    "text": "(dataset:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $dst is (dataset:\"red\",\"blue\",\"green\"), \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:\"red\",\"blue\",\"green\"",
                                    "name": "dataset",
                                    "text": "(dataset:\"red\",\"blue\",\"green\")",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dst is not (dataset:9,1,2), \"equality (left)\"",
                            "name": "assert",
                            "text": "(assert: $dst is not (dataset:9,1,2), \"equality (left)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is not",
                                    "type": "isNot"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:9,1,2",
                                    "name": "dataset",
                                    "text": "(dataset:9,1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "9",
                                            "type": "number",
                                            "value": 9
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (left)",
                                    "text": "\"equality (left)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (dataset:\"blue\",\"green\",\"red\") is $dst, \"equality (right)\"",
                            "name": "assert",
                            "text": "(assert: (dataset:\"blue\",\"green\",\"red\") is $dst, \"equality (right)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:\"blue\",\"green\",\"red\"",
                                    "name": "dataset",
                                    "text": "(dataset:\"blue\",\"green\",\"red\")",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "blue",
                                            "text": "\"blue\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "red",
                                            "text": "\"red\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "equality (right)",
                                    "text": "\"equality (right)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: $dst contains (\"green\"), \"contains\"",
                            "name": "assert",
                            "text": "(assert: $dst contains (\"green\"), \"contains\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "dst",
                                    "text": "$dst",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "contains",
                                    "type": "contains"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "\"green\"",
                                    "text": "(\"green\")",
                                    "tokens": [
                                        {
                                            "innerText": "green",
                                            "text": "\"green\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contains",
                                    "text": "\"contains\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: \"green\" is in ($dst), \"contained by\"",
                            "name": "assert",
                            "text": "(assert: \"green\" is in ($dst), \"contained by\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "green",
                                    "text": "\"green\"",
                                    "type": "string"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is in",
                                    "type": "isIn"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "$dst",
                                    "text": "($dst)",
                                    "tokens": [
                                        {
                                            "name": "dst",
                                            "text": "$dst",
                                            "type": "variable"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "contained by",
                                    "text": "\"contained by\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\"",
                            "name": "assert",
                            "text": "(assert: (dataset:1,2) + (dataset:1,2) is (dataset:1,2), \"join\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "+",
                                    "type": "addition"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "join",
                                    "text": "\"join\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\"",
                            "name": "assert",
                            "text": "(assert: (dataset:1,2,3,4,5) - (dataset:1,2) is (dataset:5,4,3), \"subtract\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2,3,4,5",
                                    "name": "dataset",
                                    "text": "(dataset:1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:1,2",
                                    "name": "dataset",
                                    "text": "(dataset:1,2)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:5,4,3",
                                    "name": "dataset",
                                    "text": "(dataset:5,4,3)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "subtract",
                                    "text": "\"subtract\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\"",
                            "name": "assert",
                            "text": "(assert: (dataset: 0, ...(a:1,2,3,4,4,4,4), 5) is (dataset:0,1,2,3,4,5), \"spread\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset: 0, ...(a:1,2,3,4,4,4,4), 5",
                                    "name": "dataset",
                                    "text": "(dataset: 0, ...(a:1,2,3,4,4,4,4), 5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "...",
                                            "type": "spread"
                                        },
                                        {
                                            "innerText": "a:1,2,3,4,4,4,4",
                                            "name": "a",
                                            "text": "(a:1,2,3,4,4,4,4)",
                                            "tokens": [
                                                {
                                                    "text": "a:",
                                                    "type": "macroName"
                                                },
                                                {
                                                    "text": "1",
                                                    "type": "number",
                                                    "value": 1
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "2",
                                                    "type": "number",
                                                    "value": 2
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "3",
                                                    "type": "number",
                                                    "value": 3
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                },
                                                {
                                                    "text": ",",
                                                    "type": "comma"
                                                },
                                                {
                                                    "text": "4",
                                                    "type": "number",
                                                    "value": 4
                                                }
                                            ],
                                            "type": "macro"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "dataset:0,1,2,3,4,5",
                                    "name": "dataset",
                                    "text": "(dataset:0,1,2,3,4,5)",
                                    "tokens": [
                                        {
                                            "text": "dataset:",
                                            "type": "macroName"
                                        },
                                        {
                                            "text": "0",
                                            "type": "number"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "3",
                                            "type": "number",
                                            "value": 3
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "4",
                                            "type": "number",
                                            "value": 4
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "5",
                                            "type": "number",
                                            "value": 5
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "spread",
                                    "text": "\"spread\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Vars_Type_Datamap",
            "Pid": "21",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "\n(set: $map to (datamap:\"juice\",\"orange\", \"a cup\",\"glass\"))\n(assert: $map's juice is \"orange\", \"get key\")\n(assert: $map's (\"a cup\") is \"glass\", \"get key with spaces\")\n(set: $map's (\"juice\") to \"strawberry\")\n(assert: $map's juice is \"strawberry\", \"set key\")\n(move: $map's juice into $juice)\n(assert: $juice is \"strawberry\", \"remove key (move)\")\n(assert: $map is (datamap:\"a cup\",\"glass\"), \"remove key (move result)\")\n(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")\n\n(pass:)\n",
                    "text": "{\n(set: $map to (datamap:\"juice\",\"orange\", \"a cup\",\"glass\"))\n(assert: $map's juice is \"orange\", \"get key\")\n(assert: $map's (\"a cup\") is \"glass\", \"get key with spaces\")\n(set: $map's (\"juice\") to \"strawberry\")\n(assert: $map's juice is \"strawberry\", \"set key\")\n(move: $map's juice into $juice)\n(assert: $juice is \"strawberry\", \"remove key (move)\")\n(assert: $map is (datamap:\"a cup\",\"glass\"), \"remove key (move result)\")\n(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")\n\n(pass:)\n}",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $map to (datamap:\"juice\",\"orange\", \"a cup\",\"glass\")",
                            "name": "set",
                            "text": "(set: $map to (datamap:\"juice\",\"orange\", \"a cup\",\"glass\"))",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"juice\",\"orange\", \"a cup\",\"glass\"",
                                    "name": "datamap",
                                    "text": "(datamap:\"juice\",\"orange\", \"a cup\",\"glass\")",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "orange",
                                            "text": "\"orange\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": " ",
                                            "type": "whitespace"
                                        },
                                        {
                                            "innerText": "a cup",
                                            "text": "\"a cup\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "glass",
                                            "text": "\"glass\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's juice is \"orange\", \"get key\"",
                            "name": "assert",
                            "text": "(assert: $map's juice is \"orange\", \"get key\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "name": "juice",
                                    "text": "'s juice",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "orange",
                                    "text": "\"orange\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "get key",
                                    "text": "\"get key\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's (\"a cup\") is \"glass\", \"get key with spaces\"",
                            "name": "assert",
                            "text": "(assert: $map's (\"a cup\") is \"glass\", \"get key with spaces\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "\"a cup\"",
                                    "text": "(\"a cup\")",
                                    "tokens": [
                                        {
                                            "innerText": "a cup",
                                            "text": "\"a cup\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "glass",
                                    "text": "\"glass\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "get key with spaces",
                                    "text": "\"get key with spaces\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "set: $map's (\"juice\") to \"strawberry\"",
                            "name": "set",
                            "text": "(set: $map's (\"juice\") to \"strawberry\")",
                            "tokens": [
                                {
                                    "text": "set:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": "'s ",
                                    "type": "possessiveOperator"
                                },
                                {
                                    "innerText": "\"juice\"",
                                    "text": "(\"juice\")",
                                    "tokens": [
                                        {
                                            "innerText": "juice",
                                            "text": "\"juice\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "grouping"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "to",
                                    "type": "to"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "strawberry",
                                    "text": "\"strawberry\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map's juice is \"strawberry\", \"set key\"",
                            "name": "assert",
                            "text": "(assert: $map's juice is \"strawberry\", \"set key\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "name": "juice",
                                    "text": "'s juice",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "strawberry",
                                    "text": "\"strawberry\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "set key",
                                    "text": "\"set key\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "move: $map's juice into $juice",
                            "name": "move",
                            "text": "(move: $map's juice into $juice)",
                            "tokens": [
                                {
                                    "text": "move:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "name": "juice",
                                    "text": "'s juice",
                                    "type": "property"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "into",
                                    "type": "into"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "juice",
                                    "text": "$juice",
                                    "type": "variable"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $juice is \"strawberry\", \"remove key (move)\"",
                            "name": "assert",
                            "text": "(assert: $juice is \"strawberry\", \"remove key (move)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "juice",
                                    "text": "$juice",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "strawberry",
                                    "text": "\"strawberry\"",
                                    "type": "string"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "remove key (move)",
                                    "text": "\"remove key (move)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: $map is (datamap:\"a cup\",\"glass\"), \"remove key (move result)\"",
                            "name": "assert",
                            "text": "(assert: $map is (datamap:\"a cup\",\"glass\"), \"remove key (move result)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "name": "map",
                                    "text": "$map",
                                    "type": "variable"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"a cup\",\"glass\"",
                                    "name": "datamap",
                                    "text": "(datamap:\"a cup\",\"glass\")",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a cup",
                                            "text": "\"a cup\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "glass",
                                            "text": "\"glass\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "remove key (move result)",
                                    "text": "\"remove key (move result)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\"",
                            "name": "assert",
                            "text": "(assert: (datamap:\"a\",1,\"b\",2)-(a:\"a\") is (datamap:\"b\",2), \"remove keys (subtraction)\")",
                            "tokens": [
                                {
                                    "text": "assert:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"a\",1,\"b\",2",
                                    "name": "datamap",
                                    "text": "(datamap:\"a\",1,\"b\",2)",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "1",
                                            "type": "number",
                                            "value": 1
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "innerText": "b",
                                            "text": "\"b\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": "-",
                                    "type": "subtraction"
                                },
                                {
                                    "innerText": "a:\"a\"",
                                    "name": "a",
                                    "text": "(a:\"a\")",
                                    "tokens": [
                                        {
                                            "text": "a:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "a",
                                            "text": "\"a\"",
                                            "type": "string"
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "is",
                                    "type": "is"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "datamap:\"b\",2",
                                    "name": "datamap",
                                    "text": "(datamap:\"b\",2)",
                                    "tokens": [
                                        {
                                            "text": "datamap:",
                                            "type": "macroName"
                                        },
                                        {
                                            "innerText": "b",
                                            "text": "\"b\"",
                                            "type": "string"
                                        },
                                        {
                                            "text": ",",
                                            "type": "comma"
                                        },
                                        {
                                            "text": "2",
                                            "type": "number",
                                            "value": 2
                                        }
                                    ],
                                    "type": "macro"
                                },
                                {
                                    "text": ",",
                                    "type": "comma"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "remove keys (subtraction)",
                                    "text": "\"remove keys (subtraction)\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "innerText": "pass:",
                            "name": "pass",
                            "text": "(pass:)",
                            "tokens": [
                                {
                                    "text": "pass:",
                                    "type": "macroName"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "collapsed"
                }
            ]
        },
        {
            "Name": "Styles_Combine",
            "Pid": "22",
            "Tags": "",
            "Tokens": [
                {
                    "innerText": "set: $style = (font: \"Arial\") + (color: #ff0033)",
                    "name": "set",
                    "text": "(set: $style = (font: \"Arial\") + (color: #ff0033))",
                    "tokens": [
                        {
                            "text": "set:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "style",
                            "text": "$style",
                            "type": "variable"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "=",
                            "type": "to"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "font: \"Arial\"",
                            "name": "font",
                            "text": "(font: \"Arial\")",
                            "tokens": [
                                {
                                    "text": "font:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "Arial",
                                    "text": "\"Arial\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "text": "+",
                            "type": "addition"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "color: #ff0033",
                            "name": "color",
                            "text": "(color: #ff0033)",
                            "tokens": [
                                {
                                    "text": "color:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "text": "#ff0033",
                                    "type": "colour"
                                }
                            ],
                            "type": "macro"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "name": "style",
                    "text": "$style",
                    "type": "variable"
                },
                {
                    "innerText": "hey there",
                    "text": "[hey there]",
                    "tokens": [
                        {
                            "text": "hey there",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                }
            ]
        },
        {
            "Name": "Enchantments",
            "Pid": "23",
            "Tags": "",
            "Tokens": [
                {
                    "text": "Lola called. She said ",
                    "type": "text"
                },
                {
                    "text": " ",
                    "type": "whitespace"
                },
                {
                    "text": "and then bye.",
                    "type": "text"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click-replace:\"L\"",
                    "name": "clickreplace",
                    "text": "(click-replace:\"L\")",
                    "tokens": [
                        {
                            "text": "click-replace:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "L",
                            "text": "\"L\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "googgle",
                    "text": "[googgle]",
                    "tokens": [
                        {
                            "text": "googgle",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "hook:\"noodles\"",
                    "name": "hook",
                    "text": "(hook:\"noodles\")",
                    "tokens": [
                        {
                            "text": "hook:",
                            "type": "macroName"
                        },
                        {
                            "innerText": "noodles",
                            "text": "\"noodles\"",
                            "type": "string"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "He ate another bowl.",
                    "text": "[He ate another bowl.]",
                    "tokens": [
                        {
                            "text": "He ate another bowl.",
                            "type": "text"
                        }
                    ],
                    "type": "hook"
                },
                {
                    "text": "\n",
                    "type": "br"
                },
                {
                    "innerText": "click-replace: ?noodles",
                    "name": "clickreplace",
                    "text": "(click-replace: ?noodles)",
                    "tokens": [
                        {
                            "text": "click-replace:",
                            "type": "macroName"
                        },
                        {
                            "text": " ",
                            "type": "whitespace"
                        },
                        {
                            "name": "noodles",
                            "text": "?noodles",
                            "type": "hookRef"
                        }
                    ],
                    "type": "macro"
                },
                {
                    "innerText": "\n\tAnd another.\n\t(click-replace: \"another\")[that's enough.]\n",
                    "text": "[\n\tAnd another.\n\t(click-replace: \"another\")[that's enough.]\n]",
                    "tokens": [
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "text": "And another.",
                            "type": "text"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        },
                        {
                            "text": "\t",
                            "type": "whitespace"
                        },
                        {
                            "innerText": "click-replace: \"another\"",
                            "name": "clickreplace",
                            "text": "(click-replace: \"another\")",
                            "tokens": [
                                {
                                    "text": "click-replace:",
                                    "type": "macroName"
                                },
                                {
                                    "text": " ",
                                    "type": "whitespace"
                                },
                                {
                                    "innerText": "another",
                                    "text": "\"another\"",
                                    "type": "string"
                                }
                            ],
                            "type": "macro"
                        },
                        {
                            "innerText": "that's enough.",
                            "text": "[that's enough.]",
                            "tokens": [
                                {
                                    "text": "that's enough.",
                                    "type": "text"
                                }
                            ],
                            "type": "hook"
                        },
                        {
                            "text": "\n",
                            "type": "br"
                        }
                    ],
                    "type": "hook"
                }
            ]
        }
    ]
}